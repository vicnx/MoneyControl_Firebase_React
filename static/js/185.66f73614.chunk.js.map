{"version":3,"file":"static/js/185.66f73614.chunk.js","mappings":"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","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Grupos/MCjoingroup/mcjoingroup.jsx","components/Grupos/MClistgrupos/mclistgrupos.jsx","pages/Grupos/Grupos.jsx"],"sourcesContent":["import { IonIcon } from \"@ionic/react\";\r\nimport * as Icons from \"ionicons/icons\";\r\n\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonContent,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonModal,\r\n  IonTitle,\r\n  IonToast,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcjoingroup.css\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import { IonAlert, IonLabel, IonRouterLink, IonToast } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mclistgrupos.css\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadinggrupos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <IonRouterLink\r\n              routerLink={\"/group/\" + c.docid}\r\n              routerDirection=\"forward\"\r\n              key={index}\r\n            >\r\n              <div\r\n                className=\"grupo-item\"\r\n                style={{\r\n                  borderColor: c.color,\r\n                  borderWidth: \"5px\",\r\n                  borderStyle: \"solid\",\r\n                  backgroundColor: c.color,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"grupo-left\"\r\n                  style={{ backgroundColor: c.color }}\r\n                >\r\n                  {c.isAdmin ? (\r\n                    <div className=\"isAdmin\">\r\n                      <DynamicFaIcon\r\n                        name=\"ellipse\"\r\n                        color=\"var(--ion-color-success)\"\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <DynamicFaIcon name={c.icono} color=\"white\" />\r\n                </div>\r\n                <div className=\"grupo-right\">\r\n                  <div className=\"grupo-r-l\">\r\n                    <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                      {c.name}\r\n                    </IonLabel>\r\n                    <div className=\"gastos_totales\">\r\n                      <span>-1000 €</span>\r\n                    </div>\r\n                    {c.codinv ? (\r\n                      <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                    ) : (\r\n                      <div className=\"codinv\">Grupo privado</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"grupo-r-r\">\r\n                    <div className=\"grupo-options\">\r\n                      {c.isAdmin && !c.default ? (\r\n                        <div\r\n                          className=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelectedDelete(c);\r\n                            setIsConfirmDeleteOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"trashOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {c.codinv ? (\r\n                        <div\r\n                          className=\"copy\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            navigator.clipboard.writeText(c.codinv);\r\n                            setSuccess({\r\n                              status: true,\r\n                              msg: \"Código de grupo copiado\",\r\n                            });\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"clipboardOutline\"\r\n                            color=\"var(--ion-color-primary)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {!c.default ? (\r\n                        <div\r\n                          className=\"exit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelected(c);\r\n                            setIsConfirmOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"exitOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grupo-r-participantes\">\r\n                    {c.default\r\n                      ? \"És tu grupo principal\"\r\n                      : c.users.length < 2\r\n                      ? \"Solo tú\"\r\n                      : c.users.length + \" participantes\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </IonRouterLink>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import { IonContent, IonPage, IonRouterLink } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCjoingroup from \"components/Grupos/MCjoingroup/mcjoingroup\";\r\nimport MClistgrupos from \"components/Grupos/MClistgrupos/mclistgrupos\";\r\nimport React from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./Grupos.css\";\r\n\r\nconst GruposPage = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <div className=\"boton_group\">\r\n          <IonRouterLink\r\n            routerLink={\"/groups/add\"}\r\n            routerDirection=\"forward\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n          <MCjoingroup />\r\n        </div>\r\n        <IonContent className=\"list-grupos\">\r\n          <MClistgrupos />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default GruposPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","useGrupos","error","setError","joinGroup","loadinggrupos","success","setSuccess","useState","showModal","setShowModal","groupcode","setGroupcode","useEffect","status","isOpen","initialBreakpoint","breakpoints","onDidDismiss","onClick","className","MCloading","loading","position","value","placeholder","onIonChange","e","detail","clearInput","size","shape","msg","message","informationCircle","duration","props","grupos","exitGroup","deleteGroup","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","css","map","c","index","routerLink","docid","routerDirection","borderColor","borderWidth","borderStyle","backgroundColor","isAdmin","icono","codinv","default","preventDefault","stopPropagation","navigator","clipboard","writeText","users","length","header","buttons","text","role","cssClass","id","handler","fullscreen","scrollX","scrollY"],"sourceRoot":""}
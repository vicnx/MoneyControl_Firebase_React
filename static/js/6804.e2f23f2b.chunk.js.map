{"version":3,"file":"static/js/6804.e2f23f2b.chunk.js","mappings":"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","sources":["components/DynamicIcons/DynamicIcons.jsx","components/MCcolores/mccolores.jsx","components/MCdatoscuenta/mcdatoscuenta.jsx","components/MCiconos/mciconos.jsx","components/MClistcuentas/mclistcuentas.jsx","components/MCdatosgrupo/mcdatosgrupo.jsx","pages/Grupos/DatosGrupo/DatosGrupo.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return <IonIcon icon={Icons.imageOutline} />;\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mccolores.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import { IonLabel, IonToast, IonItem, IonInput, IonButton } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcdatoscuenta.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/MCcolores/mccolores\";\r\nimport MCiconos from \"components/MCiconos/mciconos\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\n\r\nconst MCdatoscuenta = (props) => {\r\n  const { profile, updateProfile, loadingprofile } = useUser();\r\n  const { cuentas, createNewCuenta, success, setSuccess } = useCuentas();\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"cashOutline\");\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveCuenta() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewCuenta = {\r\n      uid: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      cantidad: cantidad ? cantidad.replace(/,/g, \".\") : 0,\r\n      name: name,\r\n    };\r\n    console.log(\"NewCuenta\", NewCuenta);\r\n    createNewCuenta(NewCuenta);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"mc-input value\">\r\n            <span>Valor inicial (EUR)</span>\r\n            <div className=\"input-currency\">\r\n              <button\r\n                id=\"decrement\"\r\n                className=\"button-decrement\"\r\n                onClick={(e) => {\r\n                  if (!(cantidad < 1)) {\r\n                    setCantidad(cantidad - 1);\r\n                  }\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"removeCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n              <CurrencyInput\r\n                className=\"valueInput\"\r\n                id=\"input-example\"\r\n                name=\"input-name\"\r\n                placeholder=\"Valor inicial de la cuenta\"\r\n                defaultValue={0}\r\n                value={cantidad}\r\n                decimalsLimit={2}\r\n                onValueChange={(value) => {\r\n                  setCantidad(value);\r\n                }}\r\n                suffix=\" €\"\r\n              />\r\n              <button\r\n                id=\"increment\"\r\n                className=\"button-increment\"\r\n                onClick={(e) => {\r\n                  setCantidad(cantidad + 1);\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"addCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n            </div>\r\n\r\n            {/* <IonLabel position=\"floating\">Valor inicial (EUR)</IonLabel>\r\n            <IonInput\r\n              disabled={success.status}\r\n              value={cantidad}\r\n              type=\"number\"\r\n              maxlength=\"8\"\r\n              placeholder=\"Valor inicial de la cuenta en euros\"\r\n              onIonChange={(e) => setCantidad(e.detail.value)}\r\n            ></IonInput> */}\r\n          </div>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre de la cuenta <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n          />\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveCuenta}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatoscuenta;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCiconos = (props) => {\r\n  const iconosCuentas = [\r\n    \"walletOutline\",\r\n    \"cardOutline\",\r\n    \"logoPaypal\",\r\n    \"cashOutline\",\r\n    \"contrastOutline\",\r\n    \"earthOutline\",\r\n    \"serverOutline\",\r\n    \"happyOutline\",\r\n    \"flashOutline\",\r\n    \"flaskOutline\",\r\n    \"globeOutline\",\r\n    \"heartOutline\",\r\n    \"flowerOutline\",\r\n    \"rocketOutline\",\r\n  ];\r\n\r\n  const iconosGrupos = [\r\n    \"happyOutline\",\r\n    \"flashOutline\",\r\n    \"flaskOutline\",\r\n    \"globeOutline\",\r\n    \"heartOutline\",\r\n    \"flowerOutline\",\r\n    \"rocketOutline\",\r\n    \"accessibilityOutline\",\r\n    \"airplaneOutline\",\r\n    \"alarmOutline\",\r\n    \"beerOutline\",\r\n    \"boatOutline\",\r\n    \"barbellOutline\",\r\n    \"bedOutline\",\r\n    \"chatbubblesOutline\",\r\n  ];\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {props.type != \"group\"\r\n            ? iconosCuentas\r\n              ? iconosCuentas.map((i, index) => (\r\n                  <SwiperSlide\r\n                    className={\r\n                      props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                    }\r\n                    style={\r\n                      props.iconoSelected == i\r\n                        ? {\r\n                            borderColor: props.colorSelected,\r\n                            borderWidth: \"3px\",\r\n                            borderStyle: \"solid\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                    key={index}\r\n                    onClick={() => {\r\n                      props.onChange(i);\r\n                    }}\r\n                  >\r\n                    <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                  </SwiperSlide>\r\n                ))\r\n              : \"No hay iconos disponibles\"\r\n            : iconosGrupos\r\n            ? iconosGrupos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistcuentas.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistcuentas = (props) => {\r\n  const {\r\n    cuentas,\r\n    loadingcuentas,\r\n    deleteCuenta,\r\n    success,\r\n    setSuccess,\r\n    error,\r\n    setError,\r\n  } = useCuentas();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadingcuentas ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : cuentas ? (\r\n        <IonList>\r\n          {cuentas.map((c, index) => (\r\n            <IonItem className=\"cuenta-item\" key={index}>\r\n              <div className=\"cuenta-name-info\">\r\n                <DynamicFaIcon name={c.icono} color={c.color} />\r\n                <IonLabel className=\"cuenta-name\">{c.name}</IonLabel>\r\n              </div>\r\n              <CountUp\r\n                end={c.cantidad}\r\n                suffix=\" €\"\r\n                duration={1.5}\r\n                separator=\" \"\r\n                decimal=\",\"\r\n                decimals={2}\r\n                className=\"contador-money\"\r\n              />\r\n\r\n              <div className=\"cuenta-options\" slot=\"end\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"trash\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n      ) : (\r\n        \"Sin cuentas\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Cuenta\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la cuenta</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCuenta(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistcuentas;\r\n","import {\r\n  IonLabel,\r\n  IonToast,\r\n  IonItem,\r\n  IonInput,\r\n  IonButton,\r\n  IonTextarea,\r\n  IonCheckbox,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcdatosgrupo.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/MCcolores/mccolores\";\r\nimport MCiconos from \"components/MCiconos/mciconos\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport randomString from \"global/functions\";\r\nconst MCdatosgrupo = (props) => {\r\n  const { profile, updateProfile, loadingprofile } = useUser();\r\n  const { grupos, loadinggrupos, createNewGrupo, success, setSuccess } =\r\n    useGrupos();\r\n  const [name, setName] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [gprivate, setGprivate] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"happyOutline\");\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveCuenta() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewGrupo = {\r\n      createdby: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      desc: desc,\r\n      name: name,\r\n      users: [profile.uid],\r\n      codinv: gprivate,\r\n    };\r\n    createNewGrupo(NewGrupo);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre del grupo <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !desc ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Descripción <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonTextarea\r\n              maxlength=\"100\"\r\n              disabled={success.status}\r\n              clearOnEdit={true}\r\n              value={desc}\r\n              onIonChange={(e) => setDesc(e.detail.value)}\r\n            ></IonTextarea>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n            type=\"group\"\r\n          />\r\n          <IonItem className=\"checkbox-gprivate\">\r\n            <div className=\"checkbox-gprivate-text\">\r\n              <IonLabel>Grupo privado</IonLabel>\r\n              <small>Si activas esta opción nadie podrá unirse.</small>\r\n            </div>\r\n\r\n            <IonCheckbox\r\n              slot=\"start\"\r\n              checked={gprivate}\r\n              onIonChange={(e) => setGprivate(e.detail.checked)}\r\n            />\r\n          </IonItem>\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveCuenta}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatosgrupo;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"./DatosGrupo.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport MClistcuentas from \"components/MClistcuentas/mclistcuentas\";\r\nimport MCdatoscuenta from \"components/MCdatoscuenta/mcdatoscuenta\";\r\nimport MCdatosgrupo from \"components/MCdatosgrupo/mcdatosgrupo\";\r\n\r\nconst DatosGrupoPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  const location = useLocation();\r\n  var str = location.pathname.split(\"/\");\r\n  var type = str[str.length - 1];\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {/* <IonHeader fixed className=\"header-cuentas-datos\">\r\n          <IonLabel className=\"title\">\r\n            {type == \"add\" ? \"Nueva cuenta\" : \"Editar cuenta\"}\r\n          </IonLabel>\r\n        </IonHeader> */}\r\n        <IonContent scrollX=\"true\" scrollY=\"true\">\r\n          <MCdatosgrupo type={type} />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DatosGrupoPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","colores","className","backgroundColor","colorSelected","slidesPerView","loop","map","c","index","borderColor","borderWidth","borderStyle","onClick","onChange","useUser","profile","loadingprofile","updateProfile","useCuentas","createNewCuenta","cuentas","success","setSuccess","useState","setName","error","setError","setColor","icono","setIcono","cantidad","setCantidad","isOpen","content","toast","setToast","loading","css","size","id","e","placeholder","defaultValue","value","decimalsLimit","onValueChange","suffix","position","maxlength","disabled","status","onIonChange","detail","newValue","iconoSelected","expand","NewCuenta","uid","replace","console","log","onDidDismiss","message","informationCircle","duration","msg","iconosCuentas","iconosGrupos","type","i","loadingcuentas","deleteCuenta","isConfirmOpen","setIsConfirmOpen","selected","setSelected","end","separator","decimal","decimals","header","buttons","text","role","cssClass","handler","useGrupos","createNewGrupo","grupos","loadinggrupos","desc","setDesc","gprivate","setGprivate","clearOnEdit","checked","NewGrupo","createdby","users","codinv","str","useLocation","pathname","split","length","fullscreen","scrollX","scrollY"],"sourceRoot":""}
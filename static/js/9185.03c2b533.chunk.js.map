{"version":3,"file":"static/js/9185.03c2b533.chunk.js","mappings":"uJAoCA,IApBsB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9BC,EAAgBC,EAAMJ,GAE5B,OAAKG,EAMED,GACL,SAAC,KAAD,CACEG,MAAO,CAAEJ,MAAOA,GAAgB,SAChCK,KAAMH,EACND,KAAMA,GAAc,QAGtB,SAAC,KAAD,CAASG,MAAO,CAAEJ,MAAOA,GAAgB,SAAWK,KAAMH,KAVnD,SAAC,KAAD,CAASG,KAAMF,EAAAA,iB,4MC0P1B,EAnQqB,SAACG,GACpB,OAUIC,EAAAA,EAAAA,KATFC,EADF,EACEA,OACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,UAEAC,GALF,EAIEC,WAJF,EAKED,aACAE,EANF,EAMEA,SACAC,EAPF,EAOEA,MACAC,EARF,EAQEA,QACAC,EATF,EASEA,WAEF,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAsDF,EAAAA,EAAAA,WAAS,GAA/D,eAAOG,EAAP,KAA4BC,EAA5B,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA4CN,EAAAA,EAAAA,UAAS,IAArD,eAAOO,EAAP,KAAuBC,EAAvB,KACA,OACE,gCACGhB,GACC,SAAC,IAAD,CACET,MAAO,OACP0B,SAAS,EACTC,IAAK,gCACLC,KAAM,MAENpB,GACF,yBACGA,EAAOqB,KAAI,SAACC,EAAGC,GAAJ,OACV,iBACEC,UAAU,aAEV5B,MAAO,CACL6B,YAAaH,EAAE9B,MACfkC,YAAa,MACbC,YAAa,QACbC,gBAAiBN,EAAE9B,OAPvB,WAUE,iBAAKgC,UAAU,aAAa5B,MAAO,CAAEgC,gBAAiBN,EAAE9B,OAAxD,UACG8B,EAAEO,SACD,gBAAKL,UAAU,UAAf,UACE,SAAC,IAAD,CACEjC,KAAK,UACLC,MAAM,gCAIV,yBAEF,SAAC,IAAD,CAAeD,KAAM+B,EAAEQ,MAAOtC,MAAM,cAEtC,iBAAKgC,UAAU,cAAf,WACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CAAUA,UAAU,aAAa5B,MAAO,CAAEJ,MAAO8B,EAAE9B,OAAnD,SACG8B,EAAE/B,QAEL,gBAAKiC,UAAU,iBAAf,UACE,6CAEDF,EAAES,QACD,iBAAKP,UAAU,SAAf,qBAAiCF,EAAES,WAEnC,gBAAKP,UAAU,SAAf,+BAGJ,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,gBAAf,UACGF,EAAEO,UAAYP,EAAEU,SACf,gBACER,UAAU,SACVS,QAAS,WACPhB,EAAkBK,GAClBT,GAAuB,IAJ3B,UAOE,SAAC,IAAD,CACEtB,KAAK,eACLC,MAAM,oCAIV,wBAED8B,EAAES,QACD,gBACEP,UAAU,OACVS,QAAS,WACPC,UAAUC,UAAUC,UAAUd,EAAES,QAChCvB,EAAW,CACT6B,QAAQ,EACRC,IAAK,gCANX,UAUE,SAAC,IAAD,CACE/C,KAAK,mBACLC,MAAM,gCAIV,wBAEA8B,EAAEU,SAcF,yBAbA,gBACER,UAAU,OACVS,QAAS,WACPlB,EAAYO,GACZX,GAAiB,IAJrB,UAOE,SAAC,IAAD,CACEpB,KAAK,cACLC,MAAM,yCAQhB,gBAAKgC,UAAU,wBAAf,SACGF,EAAEU,QACC,2BACAV,EAAEiB,MAAMC,OAAS,EACjB,aACAlB,EAAEiB,MAAMC,OAAS,wBA/FpBjB,QAsGX,cAqDF,SAAC,KAAD,CACEkB,OAAQlC,EAAQ8B,OAChBK,aAAc,kBAAMlC,EAAW,CAAE6B,QAAQ,EAAOC,IAAK,MACrDK,QAASpC,EAAQ+B,IACjBzC,KAAM+C,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVtD,MAAM,aAER,SAAC,KAAD,CACEiD,OAAQnC,EAAM+B,OACdK,aAAc,kBAAMrC,EAAS,CAAEgC,QAAQ,EAAOC,IAAK,MACnDK,QAASrC,EAAMgC,IACfzC,KAAM+C,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVtD,MAAM,aAER,SAAC,KAAD,CACEiD,OAAQ/B,EACRgC,aAAc,kBAAM/B,GAAiB,IAErCoC,OAAQ,kBACRJ,QACE,gDACA7B,EAASvB,KACT,aAEFyD,QAAS,CACP,CACEC,KAAM,WACNC,KAAM,SACNC,SAAU,YACVC,GAAI,iBAEN,CACEH,KAAM,QACNG,GAAI,iBACJC,QAAS,WACPnD,EAAUY,SAKlB,SAAC,KAAD,CACE2B,OAAQ7B,EACR8B,aAAc,kBAAM7B,GAAuB,IAE3CkC,OAAQ,iBACRJ,QACE,yDACA3B,EAAezB,KACf,aAEFyD,QAAS,CACP,CACEC,KAAM,WACNC,KAAM,SACNC,SAAU,YACVC,GAAI,iBAEN,CACEH,KAAM,WACNG,GAAI,iBACJC,QAAS,WACPlD,EAAYa,Y,UCzI1B,EAnGoB,WAClB,OACEjB,EAAAA,EAAAA,KADMO,EAAR,EAAQA,MAAOD,EAAf,EAAeA,SAAUiD,EAAzB,EAAyBA,UAAWrD,EAApC,EAAoCA,cAAeM,EAAnD,EAAmDA,QAASC,EAA5D,EAA4DA,WAE5D,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAO8C,EAAP,KAAkBC,EAAlB,KACA,GAAkC/C,EAAAA,EAAAA,UAAS,IAA3C,eAAOgD,EAAP,KAAkBC,EAAlB,KACA,GAAsCjD,EAAAA,EAAAA,WAAS,GAA/C,yBAMA,OALAkD,EAAAA,EAAAA,YAAU,WACJpD,EAAQ8B,QAAUkB,GACpBC,GAAa,KAEd,CAACjD,KAEF,iCACE,UAAC,KAAD,CACEkC,OAAQc,EACRK,kBAAmB,GACnBC,YAAa,CAAC,EAAG,GAAK,GACtBnB,aAAc,kBAAMc,GAAa,IAJnC,WAME,UAAC,KAAD,YACE,SAAC,KAAD,iCACA,SAAC,KAAD,CAAY/D,KAAK,MAAjB,UACE,SAAC,KAAD,CACEwC,QAAS,WACPuB,GAAa,IAFjB,yBASJ,SAAC,KAAD,CAAYhC,UAAU,eAAtB,SACGvB,GACC,SAAC6D,EAAA,EAAD,CAAW5C,SAAS,KAEpB,iCACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAU2B,SAAS,UAAnB,+CAGA,SAAC,KAAD,CACEkB,MAAON,EACPO,YAAY,mCACZC,YAAa,SAACC,GAAD,OAAOR,EAAaQ,EAAEC,OAAOJ,QAC1CK,YAAU,QAGd,gBAAK5C,UAAU,cAAf,UACE,UAAC,KAAD,CACEA,UAAU,aACVJ,KAAK,SACLiD,MAAM,QACN7E,MAAM,UACNyC,QAAS,kBAAMqB,EAAUG,IAL3B,WAOE,SAAC,KAAD,CAAUjC,UAAU,QAApB,qBACA,SAAC,IAAD,CACEjC,KAAK,mBACLC,MAAM,QACNC,KAAK,sBAQnB,UAAC,KAAD,CACE+B,UAAU,aACVJ,KAAK,SACLiD,MAAM,QACN7E,MAAM,SACNyC,QAAS,kBAAMuB,GAAa,IAL9B,WAOE,SAAC,KAAD,CAAUhC,UAAU,QAApB,gCACA,SAAC,IAAD,CAAejC,KAAK,gBAAgBC,MAAM,QAAQC,KAAK,YAEzD,SAAC,KAAD,CACEgD,OAAQnC,EAAM+B,OACdK,aAAc,kBAAMrC,EAAS,CAAEgC,QAAQ,EAAOC,IAAK,MACnDK,QAASrC,EAAMgC,IACfzC,KAAM+C,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVtD,MAAM,YAER,SAAC,KAAD,CACEiD,OAAQlC,EAAQ8B,OAChBK,aAAc,kBAAMlC,EAAW,CAAE6B,QAAQ,EAAOC,IAAK,MACrDK,QAASpC,EAAQ+B,IACjBzC,KAAM+C,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVtD,MAAM,gBC3Ed,EAxBmB,WACjB,OAAoC8E,EAAAA,EAAAA,KAApC,EAAQC,QAAR,EAAiBC,eAEjB,OADAC,QAAQC,IAAI,eAEV,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,YAAU,EAACC,QAAQ,QAAQC,QAAQ,QAA/C,WACE,iBAAKrD,UAAU,cAAf,WACE,SAAC,KAAD,CACEsD,WAAY,cACZC,gBAAgB,OAChBvD,UAAU,YAHZ,UAKE,SAAC,IAAD,CAAejC,KAAK,YAAYC,MAAM,gCAExC,SAAC,EAAD,QAEF,SAAC,KAAD,CAAYgC,UAAU,cAAtB,UACE,SAAC,EAAD","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Grupos/MClistgrupos/mclistgrupos.jsx","components/Grupos/MCjoingroup/mcjoingroup.jsx","pages/Grupos/Grupos.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return <IonIcon icon={Icons.imageOutline} />;\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistgrupos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n  return (\r\n    <>\r\n      {loadinggrupos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"5px\",\r\n                borderStyle: \"solid\",\r\n                backgroundColor: c.color,\r\n              }}\r\n            >\r\n              <div className=\"grupo-left\" style={{ backgroundColor: c.color }}>\r\n                {c.isAdmin ? (\r\n                  <div className=\"isAdmin\">\r\n                    <DynamicFaIcon\r\n                      name=\"ellipse\"\r\n                      color=\"var(--ion-color-success)\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <DynamicFaIcon name={c.icono} color=\"white\" />\r\n              </div>\r\n              <div className=\"grupo-right\">\r\n                <div className=\"grupo-r-l\">\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                  <div className=\"gastos_totales\">\r\n                    <span>-1000 €</span>\r\n                  </div>\r\n                  {c.codinv ? (\r\n                    <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                  ) : (\r\n                    <div className=\"codinv\">Grupo privado</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"grupo-r-r\">\r\n                  <div className=\"grupo-options\">\r\n                    {c.isAdmin && !c.default ? (\r\n                      <div\r\n                        className=\"delete\"\r\n                        onClick={() => {\r\n                          setSelectedDelete(c);\r\n                          setIsConfirmDeleteOpen(true);\r\n                        }}\r\n                      >\r\n                        <DynamicFaIcon\r\n                          name=\"trashOutline\"\r\n                          color=\"var(--ion-color-danger-tint)\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {c.codinv ? (\r\n                      <div\r\n                        className=\"copy\"\r\n                        onClick={() => {\r\n                          navigator.clipboard.writeText(c.codinv);\r\n                          setSuccess({\r\n                            status: true,\r\n                            msg: \"Código de grupo copiado\",\r\n                          });\r\n                        }}\r\n                      >\r\n                        <DynamicFaIcon\r\n                          name=\"clipboardOutline\"\r\n                          color=\"var(--ion-color-primary)\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {!c.default ? (\r\n                      <div\r\n                        className=\"exit\"\r\n                        onClick={() => {\r\n                          setSelected(c);\r\n                          setIsConfirmOpen(true);\r\n                        }}\r\n                      >\r\n                        <DynamicFaIcon\r\n                          name=\"exitOutline\"\r\n                          color=\"var(--ion-color-danger-tint)\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"grupo-r-participantes\">\r\n                  {c.default\r\n                    ? \"És tu grupo principal\"\r\n                    : c.users.length < 2\r\n                    ? \"Solo tú\"\r\n                    : c.users.length + \" participantes\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonButton,\r\n  IonModal,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonButtons,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcjoingroup.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Grupos.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MClistgrupos from \"components/Grupos/MClistgrupos/mclistgrupos\";\r\nimport MCjoingroup from \"components/Grupos/MCjoingroup/mcjoingroup\";\r\nconst GruposPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  console.log(\"GruposPage\");\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <div className=\"boton_group\">\r\n          <IonRouterLink\r\n            routerLink={\"/groups/add\"}\r\n            routerDirection=\"none\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n          <MCjoingroup />\r\n        </div>\r\n        <IonContent className=\"list-grupos\">\r\n          <MClistgrupos />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default GruposPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","useGrupos","grupos","loadinggrupos","exitGroup","deleteGroup","checkAdmin","setError","error","success","setSuccess","useState","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","loading","css","size","map","c","index","className","borderColor","borderWidth","borderStyle","backgroundColor","isAdmin","icono","codinv","default","onClick","navigator","clipboard","writeText","status","msg","users","length","isOpen","onDidDismiss","message","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","joinGroup","showModal","setShowModal","groupcode","setGroupcode","useEffect","initialBreakpoint","breakpoints","MCloading","value","placeholder","onIonChange","e","detail","clearInput","shape","useCuentas","cuentas","loadingcuentas","console","log","fullscreen","scrollX","scrollY","routerLink","routerDirection"],"sourceRoot":""}
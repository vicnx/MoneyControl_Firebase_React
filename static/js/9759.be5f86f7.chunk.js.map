{"version":3,"file":"static/js/9759.be5f86f7.chunk.js","mappings":"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","sources":["components/DynamicIcons/DynamicIcons.jsx","components/MClistgrupos/mclistgrupos.jsx","pages/Grupos/Grupos.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return <IonIcon icon={Icons.imageOutline} />;\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistgrupos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    cuentas,\r\n    loadingcuentas,\r\n    deleteCuenta,\r\n    success,\r\n    setSuccess,\r\n    error,\r\n    setError,\r\n  } = useCuentas();\r\n  const { grupos, loadinggrupos } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  return (\r\n    <>\r\n      {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Cuenta\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la cuenta</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCuenta(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Grupos.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MClistgrupos from \"components/MClistgrupos/mclistgrupos\";\r\n\r\nconst GruposPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  console.log(\"GruposPage\");\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <div className=\"boton_group\">\r\n          <IonRouterLink\r\n            routerLink={\"/groups/add\"}\r\n            routerDirection=\"none\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n          <IonButton\r\n            className=\"boton-join\"\r\n            size=\"medium\"\r\n            shape=\"round\"\r\n            color=\"danger\"\r\n          >\r\n            <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n            <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n          </IonButton>\r\n        </div>\r\n        <IonContent className=\"list-grupos\">\r\n          <MClistgrupos />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default GruposPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","useCuentas","deleteCuenta","cuentas","loadingcuentas","success","setSuccess","error","setError","useGrupos","grupos","loadinggrupos","useState","isConfirmOpen","setIsConfirmOpen","selected","setSelected","map","c","index","className","borderColor","borderWidth","borderStyle","icono","desc","onClick","codinv","isOpen","status","onDidDismiss","msg","message","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","console","log","fullscreen","scrollX","scrollY","routerLink","routerDirection","size","shape"],"sourceRoot":""}
{"version":3,"file":"static/js/428.0131360f.chunk.js","mappings":"4VAuMA,EA7KqB,SAACA,GACpB,OAAoCC,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,eACjB,GAA6DC,EAAAA,EAAAA,KAArDC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,MAAOC,EAAhD,EAAgDA,SAChD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,YAAlC,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,WAAS,GAArC,eAAOS,EAAP,KAAeC,EAAf,KA2CA,OACE,gCACGjB,GACC,SAAC,IAAD,CACEkB,MAAO,OACPC,SAAS,EACTC,IAAK,gCACLC,KAAM,OAGR,iCACE,iBAAKC,UAAU,iBAAf,WACE,8CACA,iBAAKA,UAAU,iBAAf,WACE,mBACEC,GAAG,YACHD,UAAU,mBACVE,QAAS,SAACC,GACJX,GAAY,GACdC,EAAYD,EAAW,IAL7B,UASE,SAAC,IAAD,CACEY,KAAM,sBACNC,KAAK,MACLT,MAAM,aAGV,SAAC,IAAD,CACEI,UAAU,aACVC,GAAG,gBACHG,KAAK,aACLE,YAAY,6BACZC,aAAc,EACdC,MAAOhB,EACPiB,cAAe,EACfC,cAAe,SAACF,GACdf,EAAYe,IAEdG,OAAO,UACPC,oBAAoB,KAEtB,mBACEX,GAAG,YACHD,UAAU,mBACVE,QAAS,SAACC,GACRV,EAAYD,EAAW,IAJ3B,UAOE,SAAC,IAAD,CACEY,KAAM,mBACNC,KAAK,MACLT,MAAM,mBAKd,UAAC,KAAD,CAASI,UAAU,WAAnB,WACE,UAAC,KAAD,CACEa,SAAS,WACTC,MACE/B,EAAMgC,SAAW7B,EAAO,CAAEU,MAAO,OAAU,CAAEA,MAAO,SAHxD,uCAMwB,iBAAMI,UAAU,WAAhB,mBAExB,SAAC,KAAD,CACEgB,UAAU,MACVC,SAAUpC,EAAQkC,OAClBG,aAAa,EACbV,MAAOtB,EACPiC,YAAa,SAAChB,GAAD,OAAOhB,EAAQgB,EAAEiB,OAAOZ,cAGzC,SAAC,IAAD,CACEa,SA5GV,SAAsBC,GACpB3B,EAAU2B,IA4GFC,eAAgB7B,EAChB8B,kBAAmB7B,KAErB,SAAC,IAAD,CAAgB0B,SAzHxB,SAA2BC,GACzBjC,EAASiC,GACT/B,GAAa,IAuHsCkC,cAAerC,KAC5D,SAAC,IAAD,CACEA,MAAOA,EACPiC,SAvHV,SAAyBC,GACvB/B,EAAa+B,IAuHLhC,UAAWA,KAEb,UAAC,KAAD,CACEoC,OAAO,OACP1B,UAAU,gBACVE,QArHV,WACE,GAAKd,EAIL,GAAKE,EAIL,GAAKJ,EAAL,CAIAyC,QAAQC,IAAIpC,GAEZ,IAAIqC,EAAW,CACbnC,OAAQA,EACRF,SAAUA,EAAWA,EAASsC,WAAWC,QAAQ,KAAM,KAAO,EAC9DC,KAAMvD,EAAQwD,IACdxD,QAASA,EAAQyD,MACjBhD,KAAMA,EACNI,UAAWA,EACX6C,UAAUC,EAAAA,EAAAA,IAAa,IACvBC,MAAOC,KAAKC,OAEd3D,EAAWiD,EAAUzC,QAfnBJ,EAAS,CAAE+B,QAAQ,EAAMyB,IAAK,kDAJ9BxD,EAAS,CAAE+B,QAAQ,EAAMyB,IAAK,sCAJ9BxD,EAAS,CAAE+B,QAAQ,EAAMyB,IAAK,0BAoHxBvB,SAAUpC,EAAQkC,OAJpB,6BAOE,SAAC,IAAD,CACEX,KAAM,uBACNC,KAAK,MACLT,MAAM,iBAKd,SAAC,KAAD,CACE6C,OAAQ5D,EAAQkC,OAChB2B,aAAc,kBAAM5D,EAAW,CAAEiC,QAAQ,EAAOyB,IAAK,MACrDG,QAAS9D,EAAQ2D,IACjBI,KAAMC,EAAAA,kBACNhC,SAAS,MACTiC,SAAU,IACVlD,MAAM,aAER,SAAC,KAAD,CACE6C,OAAQ1D,EAAMgC,OACd2B,aAAc,kBAAM1D,EAAS,CAAE+B,QAAQ,EAAOyB,IAAK,MACnDG,QAAS5D,EAAMyD,IACfI,KAAMC,EAAAA,kBACNhC,SAAS,MACTiC,SAAU,IACVlD,MAAM,gBChLd,EAVmB,WACjB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAYmD,YAAU,EAACC,QAAQ,QAAQC,QAAQ,OAA/C,UACE,SAAC,EAAD","sources":["components/Gastos/MCnuevogasto/mcnuevogasto.jsx","pages/Gastos/NuevoGasto.jsx"],"sourcesContent":["import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonTextarea,\r\n  IonToast,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcnuevogasto.css\";\r\nimport MCgruposselect from \"../MCgruposselect/mcgruposselect\";\r\nimport MCcategorylist from \"../MCcategorylist/mccategorylist\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport { useEffect } from \"react\";\r\nimport MCcuentaselect from \"../MCcuentaselect/mccuentaselect\";\r\nimport { randomString } from \"global/functions\";\r\nconst MCnuevogasto = (props) => {\r\n  const { profile, loadingprofile } = useUser();\r\n  const { nuevoGasto, success, setSuccess, error, setError } = useGrupos();\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [grupo, setGrupo] = useState();\r\n  const [categoria, setCategoria] = useState();\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [cuenta, setCuenta] = useState(false);\r\n\r\n  function changeGrupoSelect(newValue) {\r\n    setGrupo(newValue);\r\n    setCategoria(false);\r\n  }\r\n\r\n  function changeCategoria(newValue) {\r\n    setCategoria(newValue);\r\n  }\r\n\r\n  function changeCuenta(newValue) {\r\n    setCuenta(newValue);\r\n  }\r\n\r\n  function saveGasto() {\r\n    if (!grupo) {\r\n      setError({ status: true, msg: \"Selecciona un grupo.\" });\r\n      return;\r\n    }\r\n    if (!categoria) {\r\n      setError({ status: true, msg: \"Selecciona una categoría.\" });\r\n      return;\r\n    }\r\n    if (!desc) {\r\n      setError({ status: true, msg: \"Tienes que añadir una descripción.\" });\r\n      return;\r\n    }\r\n    console.log(cantidad);\r\n\r\n    let newGasto = {\r\n      cuenta: cuenta,\r\n      cantidad: cantidad ? cantidad.toString().replace(/,/g, \".\") : 0,\r\n      user: profile.uid,\r\n      profile: profile.docid,\r\n      desc: desc,\r\n      categoria: categoria,\r\n      uidgasto: randomString(25),\r\n      fecha: Date.now(),\r\n    };\r\n    nuevoGasto(newGasto, grupo);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"mc-input value\">\r\n            <span>Cantidad (EUR)</span>\r\n            <div className=\"input-currency\">\r\n              <button\r\n                id=\"decrement\"\r\n                className=\"button-decrement\"\r\n                onClick={(e) => {\r\n                  if (cantidad >= 1) {\r\n                    setCantidad(cantidad - 1);\r\n                  }\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"removeCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n              <CurrencyInput\r\n                className=\"valueInput\"\r\n                id=\"input-example\"\r\n                name=\"input-name\"\r\n                placeholder=\"Valor inicial de la cuenta\"\r\n                defaultValue={0}\r\n                value={cantidad}\r\n                decimalsLimit={2}\r\n                onValueChange={(value) => {\r\n                  setCantidad(value);\r\n                }}\r\n                suffix=\" €\"\r\n                allowNegativeValue={false}\r\n              />\r\n              <button\r\n                id=\"increment\"\r\n                className=\"button-increment\"\r\n                onClick={(e) => {\r\n                  setCantidad(cantidad + 1);\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"addCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={\r\n                error.status && !desc ? { color: \"red\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              Descripción del gasto <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonTextarea\r\n              maxlength=\"100\"\r\n              disabled={success.status}\r\n              clearOnEdit={true}\r\n              value={desc}\r\n              onIonChange={(e) => setDesc(e.detail.value)}\r\n            ></IonTextarea>\r\n          </IonItem>\r\n          <MCcuentaselect\r\n            onChange={changeCuenta}\r\n            cuentaSelected={cuenta}\r\n            setCuentaSelected={setCuenta}\r\n          />\r\n          <MCgruposselect onChange={changeGrupoSelect} grupoSelected={grupo} />\r\n          <MCcategorylist\r\n            grupo={grupo}\r\n            onChange={changeCategoria}\r\n            categoria={categoria}\r\n          />\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveGasto}\r\n            disabled={success.status}\r\n          >\r\n            Añadir gasto\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCnuevogasto;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./NuevoGasto.css\";\r\nimport MCnuevogasto from \"components/Gastos/MCnuevogasto/mcnuevogasto\";\r\nconst NuevoGasto = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"true\">\r\n        <MCnuevogasto />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default NuevoGasto;\r\n"],"names":["props","useUser","profile","loadingprofile","useGrupos","nuevoGasto","success","setSuccess","error","setError","useState","desc","setDesc","grupo","setGrupo","categoria","setCategoria","cantidad","setCantidad","cuenta","setCuenta","color","loading","css","size","className","id","onClick","e","name","slot","placeholder","defaultValue","value","decimalsLimit","onValueChange","suffix","allowNegativeValue","position","style","status","maxlength","disabled","clearOnEdit","onIonChange","detail","onChange","newValue","cuentaSelected","setCuentaSelected","grupoSelected","expand","console","log","newGasto","toString","replace","user","uid","docid","uidgasto","randomString","fecha","Date","now","msg","isOpen","onDidDismiss","message","icon","informationCircle","duration","fullscreen","scrollX","scrollY"],"sourceRoot":""}
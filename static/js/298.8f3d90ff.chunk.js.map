{"version":3,"file":"static/js/298.8f3d90ff.chunk.js","mappings":"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","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Generales/MCcolores/mccolores.jsx","components/Generales/MCiconos/mciconos.jsx","components/Grupos/MCdatosgrupo/mcdatosgrupo.jsx","pages/Grupos/DatosGrupo/DatosGrupo.jsx"],"sourcesContent":["import { IonIcon } from \"@ionic/react\";\r\nimport * as Icons from \"ionicons/icons\";\r\n\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import React from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"./mccolores.css\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n    \"#36f443\",\r\n    \"#4336f4\",\r\n    \"#f436a8\",\r\n    \"#9e36f4\",\r\n    \"#36f488\",\r\n    \"#f47f36\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport {\r\n  iconosCuentas,\r\n  iconosGrupos,\r\n  iconosCategorias,\r\n} from \"global/functions\";\r\n\r\nconst MCiconos = (props) => {\r\n  const [iconos, setIconos] = useState(iconosCuentas);\r\n\r\n  useEffect(() => {\r\n    switch (props.type) {\r\n      case \"group\":\r\n        setIconos(iconosGrupos);\r\n        break;\r\n      case \"cuentas\":\r\n        setIconos(iconosCuentas);\r\n        break;\r\n      case \"categories\":\r\n        setIconos(iconosCategorias);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {iconos\r\n            ? iconos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonTextarea,\r\n  IonToast,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcdatosgrupo.css\";\r\nconst MCdatosgrupo = (props) => {\r\n  const { profile, loadingprofile } = useUser();\r\n  const { createNewGrupo, success, setSuccess } = useGrupos();\r\n  const [name, setName] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [gprivate, setGprivate] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"happyOutline\");\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveGrupo() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewGrupo = {\r\n      createdby: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      desc: desc,\r\n      name: name,\r\n      users: [profile.uid],\r\n      codinv: gprivate,\r\n    };\r\n    createNewGrupo(NewGrupo);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre del grupo <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !desc ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Descripción <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonTextarea\r\n              maxlength=\"100\"\r\n              disabled={success.status}\r\n              clearOnEdit={true}\r\n              value={desc}\r\n              onIonChange={(e) => setDesc(e.detail.value)}\r\n            ></IonTextarea>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n            type=\"group\"\r\n          />\r\n          <IonItem className=\"checkbox-gprivate\">\r\n            <div className=\"checkbox-gprivate-text\">\r\n              <IonLabel>Grupo privado</IonLabel>\r\n              <small>Si activas esta opción nadie podrá unirse.</small>\r\n            </div>\r\n\r\n            <IonCheckbox\r\n              slot=\"start\"\r\n              checked={gprivate}\r\n              onIonChange={(e) => setGprivate(e.detail.checked)}\r\n            />\r\n          </IonItem>\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveGrupo}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatosgrupo;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCdatosgrupo from \"components/Grupos/MCdatosgrupo/mcdatosgrupo\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./DatosGrupo.css\";\r\n\r\nconst DatosGrupoPage = () => {\r\n  const location = useLocation();\r\n  var str = location.pathname.split(\"/\");\r\n  var type = str[str.length - 1];\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <IonContent scrollX=\"true\" scrollY=\"true\">\r\n          <MCdatosgrupo type={type} />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DatosGrupoPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","colores","className","backgroundColor","colorSelected","slidesPerView","loop","map","c","index","borderColor","borderWidth","borderStyle","onClick","onChange","useState","iconosCuentas","iconos","setIconos","useEffect","type","iconosGrupos","iconosCategorias","i","iconoSelected","useUser","profile","loadingprofile","useGrupos","createNewGrupo","success","setSuccess","setName","desc","setDesc","error","setError","gprivate","setGprivate","setColor","icono","setIcono","isOpen","content","toast","setToast","loading","css","size","position","maxlength","disabled","status","value","placeholder","onIonChange","e","detail","clearOnEdit","newValue","checked","expand","NewGrupo","createdby","uid","users","codinv","onDidDismiss","message","informationCircle","duration","msg","str","useLocation","pathname","split","length","fullscreen","scrollX","scrollY"],"sourceRoot":""}
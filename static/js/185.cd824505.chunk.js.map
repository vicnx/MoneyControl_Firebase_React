{"version":3,"file":"static/js/185.cd824505.chunk.js","mappings":"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","sources":["components/Grupos/MCjoingroup/mcjoingroup.jsx","components/Grupos/MClistgrupos/mclistgrupos.jsx","pages/Grupos/Grupos.jsx"],"sourcesContent":["import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonContent,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonModal,\r\n  IonTitle,\r\n  IonToast,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcjoingroup.css\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import { IonAlert, IonLabel, IonRouterLink, IonToast } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mclistgrupos.css\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadinggrupos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : grupos ? (\r\n        <div className=\"lista-grupos\">\r\n          {grupos\r\n            .filter((g) => !g.onlyread)\r\n            .map((c, index) => (\r\n              <IonRouterLink\r\n                routerLink={\"/group/\" + c.docid}\r\n                routerDirection=\"forward\"\r\n                key={index}\r\n              >\r\n                <div\r\n                  className=\"grupo-item\"\r\n                  style={{\r\n                    borderColor: c.color,\r\n                    borderWidth: \"5px\",\r\n                    borderStyle: \"solid\",\r\n                    backgroundColor: c.color,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"grupo-left\"\r\n                    style={{ backgroundColor: c.color }}\r\n                  >\r\n                    {c.isAdmin ? (\r\n                      <div className=\"isAdmin\">\r\n                        <DynamicFaIcon\r\n                          name=\"ellipse\"\r\n                          color=\"var(--ion-color-success)\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    <DynamicFaIcon name={c.icono} color=\"white\" />\r\n                  </div>\r\n                  <div className=\"grupo-right\">\r\n                    <div className=\"grupo-r-l\">\r\n                      <IonLabel\r\n                        className=\"grupo-name\"\r\n                        style={{ color: c.color }}\r\n                      >\r\n                        {c.name}\r\n                      </IonLabel>\r\n                      <div className=\"gastos_totales\">\r\n                        <span>-1000 €</span>\r\n                      </div>\r\n                      {c.codinv ? (\r\n                        <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                      ) : (\r\n                        <div className=\"codinv\">Grupo privado</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"grupo-r-r\">\r\n                      <div className=\"grupo-options\">\r\n                        {c.isAdmin && !c.default && !c.onlyread ? (\r\n                          <div\r\n                            className=\"delete\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              e.stopPropagation();\r\n                              setSelectedDelete(c);\r\n                              setIsConfirmDeleteOpen(true);\r\n                            }}\r\n                          >\r\n                            <DynamicFaIcon\r\n                              name=\"trashOutline\"\r\n                              color=\"var(--ion-color-danger-tint)\"\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                        {c.codinv ? (\r\n                          <div\r\n                            className=\"copy\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              e.stopPropagation();\r\n                              navigator.clipboard.writeText(c.codinv);\r\n                              setSuccess({\r\n                                status: true,\r\n                                msg: \"Código de grupo copiado\",\r\n                              });\r\n                            }}\r\n                          >\r\n                            <DynamicFaIcon\r\n                              name=\"clipboardOutline\"\r\n                              color=\"var(--ion-color-primary)\"\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                        {!c.default && !c.onlyread ? (\r\n                          <div\r\n                            className=\"exit\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              e.stopPropagation();\r\n                              setSelected(c);\r\n                              setIsConfirmOpen(true);\r\n                            }}\r\n                          >\r\n                            <DynamicFaIcon\r\n                              name=\"exitOutline\"\r\n                              color=\"var(--ion-color-danger-tint)\"\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"grupo-r-participantes\">\r\n                      {c.default\r\n                        ? \"És tu grupo principal\"\r\n                        : c.users.length < 2\r\n                        ? \"Solo tú\"\r\n                        : c.users.length + \" participantes\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </IonRouterLink>\r\n            ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import { IonContent, IonPage, IonRouterLink } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCjoingroup from \"components/Grupos/MCjoingroup/mcjoingroup\";\r\nimport MClistgrupos from \"components/Grupos/MClistgrupos/mclistgrupos\";\r\nimport React from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./Grupos.css\";\r\n\r\nconst GruposPage = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <div className=\"boton_group\">\r\n          <IonRouterLink\r\n            routerLink={\"/groups/add\"}\r\n            routerDirection=\"forward\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n          <MCjoingroup />\r\n        </div>\r\n        <IonContent className=\"list-grupos\">\r\n          <MClistgrupos />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default GruposPage;\r\n"],"names":["useGrupos","error","setError","joinGroup","loadinggrupos","success","setSuccess","useState","showModal","setShowModal","groupcode","setGroupcode","useEffect","status","isOpen","initialBreakpoint","breakpoints","onDidDismiss","slot","onClick","className","MCloading","loading","position","value","placeholder","onIonChange","e","detail","clearInput","size","shape","color","name","msg","message","icon","informationCircle","duration","props","grupos","exitGroup","deleteGroup","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","css","filter","g","onlyread","map","c","index","routerLink","docid","routerDirection","style","borderColor","borderWidth","borderStyle","backgroundColor","isAdmin","icono","codinv","default","preventDefault","stopPropagation","navigator","clipboard","writeText","users","length","header","buttons","text","role","cssClass","id","handler","fullscreen","scrollX","scrollY"],"sourceRoot":""}
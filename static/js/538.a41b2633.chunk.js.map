{"version":3,"file":"static/js/538.a41b2633.chunk.js","mappings":"yOA4EA,EA9DoB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACrB,GAUIC,EAAAA,EAAAA,KAVJ,EACEC,OADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,QARF,EASEC,WAEF,OACE,iCACE,iBACEC,UAAU,oBACVC,MAAO,CAAEC,gBAAiBb,EAAMc,OAFlC,WAIE,iBACEF,MACEZ,EAAMe,KACFf,EAAMe,KAAKC,OAAS,GAClB,CAAEC,SAAU,QACZ,CAAEA,SAAU,QACd,KANR,SASGjB,EAAMe,OAERf,EAAMkB,SACL,UAAC,KAAD,CAAQP,UAAU,iBAAlB,WACE,SAAC,KAAD,CAAcG,MAAM,UAAUH,UAAU,uBAAxC,UACE,SAAC,IAAD,CAAeI,KAAM,mBAAoBD,MAAM,aAEjD,UAAC,KAAD,CAAYK,KAAK,QAAQR,UAAU,kBAAnC,WACE,SAAC,KAAD,CAAcG,MAAM,UAAUH,UAAU,wBAAxC,UACE,SAAC,IAAD,CAAeI,KAAM,gBAAiBD,MAAM,aAE9C,SAAC,KAAD,CACEM,WAAY,eAAiBpB,EAAMqB,MACnCC,gBAAgB,UAFlB,UAIE,SAAC,KAAD,CACER,MAAM,YACNH,UAAU,wBAFZ,UAIE,SAAC,IAAD,CAAeI,KAAM,cAAeD,MAAM,qBAMlD,4BAGJ,SAAC,KAAD,CAAYH,UAAU,2B,6BC/B5B,EA5BsB,WACpB,IAAMY,GAAaC,EAAAA,EAAAA,MAAbD,SACN,GAAmDtB,EAAAA,EAAAA,KAA3CE,EAAR,EAAQA,cAAesB,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,cAMjC,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAASF,KACR,CAACA,KAGF,SAAC,KAAD,WACE,SAAC,KAAD,CAAYK,YAAU,EAACC,QAAQ,QAAQC,QAAQ,QAA/C,SACG3B,GACC,SAAC,IAAD,CACEW,MAAO,OACPiB,SAAS,EACTC,IAAK,gCACLC,KAAM,OAGR,+BACE,SAAC,EAAD,CAAajC,MAAO0B","sources":["components/Grupos/MCinfogrupo/mcinfogrupo.jsx","pages/Grupos/InfoGrupo/InfoGrupo.jsx"],"sourcesContent":["import {\r\n  IonContent,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFabList,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcinfogrupo.css\";\r\n\r\nconst MCinfogrupo = ({ grupo }) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header-info-grupo\"\r\n        style={{ backgroundColor: grupo.color }}\r\n      >\r\n        <span\r\n          style={\r\n            grupo.name\r\n              ? grupo.name.length < 10\r\n                ? { fontSize: \"30px\" }\r\n                : { fontSize: \"20px\" }\r\n              : null\r\n          }\r\n        >\r\n          {grupo.name}\r\n        </span>\r\n        {grupo.isAdmin ? (\r\n          <IonFab className=\"grupo-info-fab\">\r\n            <IonFabButton color=\"success\" className=\"grupo-info-fab-first\">\r\n              <DynamicFaIcon name={\"arrowBackOutline\"} color=\"white\" />\r\n            </IonFabButton>\r\n            <IonFabList side=\"start\" className=\"grupo-info-list\">\r\n              <IonFabButton color=\"warning\" className=\"grupo-info-fab-button\">\r\n                <DynamicFaIcon name={\"pencilOutline\"} color=\"black\" />\r\n              </IonFabButton>\r\n              <IonRouterLink\r\n                routerLink={\"/categories/\" + grupo.docid}\r\n                routerDirection=\"forward\"\r\n              >\r\n                <IonFabButton\r\n                  color=\"secondary\"\r\n                  className=\"grupo-info-fab-button\"\r\n                >\r\n                  <DynamicFaIcon name={\"appsOutline\"} color=\"black\" />\r\n                </IonFabButton>\r\n              </IonRouterLink>\r\n            </IonFabList>\r\n          </IonFab>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <IonContent className=\"content-info-grupo\">\r\n        {/* <MClistgrupos /> */}\r\n      </IonContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCinfogrupo;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCinfogrupo from \"components/Grupos/MCinfogrupo/mcinfogrupo\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./InfoGrupo.css\";\r\n\r\nconst InfoGrupoPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, grupoSelected } = useGrupos();\r\n\r\n  useEffect(() => {\r\n    getGroup(groupUID);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            <MCinfogrupo grupo={grupoSelected} />\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default InfoGrupoPage;\r\n"],"names":["grupo","useGrupos","grupos","loadinggrupos","exitGroup","checkAdmin","deleteGroup","setError","error","success","setSuccess","className","style","backgroundColor","color","name","length","fontSize","isAdmin","side","routerLink","docid","routerDirection","groupUID","useParams","getGroup","grupoSelected","useEffect","fullscreen","scrollX","scrollY","loading","css","size"],"sourceRoot":""}
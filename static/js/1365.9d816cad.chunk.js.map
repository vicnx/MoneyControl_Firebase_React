{"version":3,"file":"static/js/1365.9d816cad.chunk.js","mappings":"wPAmBe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,KAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAASD,EAAQI,OAAjD,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAY,CAChBC,gBAAiB,QAAUR,EAAQI,MAAQ,MAEvCK,EAAc,CAClB,aACA,qBACA,YACA,aAGFC,EAAAA,EAAAA,YAAU,WACRJ,EAAYN,EAAQI,SACnB,CAACJ,IAEJ,IAAMW,EAAY,WAChB,IAAIC,EAAQH,EAAYI,KAAKC,MAAMD,KAAKE,SAAWN,EAAYO,SAC/DV,EACE,oCACEM,EACA,IC1CO,SAAsBI,GAKnC,IAJA,IAAIC,EAAS,GAGTC,EAAmBF,EACdG,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAHA,iEAGqBG,OAAOP,KAAKC,MAAMD,KAAKE,SAAWG,IAEzD,OAAOD,EDmCDI,CAAa,GACb,SAIN,OACE,iCACE,UAAC,KAAD,CACEC,OAAQpB,EACRqB,kBAAmB,GACnBC,YAAa,CAAC,EAAG,GAAK,GACtBC,aAAc,kBAAMtB,GAAa,IAJnC,WAME,UAAC,KAAD,YACE,SAAC,KAAD,4BACA,SAAC,KAAD,CAAYuB,KAAK,MAAjB,UACE,SAAC,KAAD,CACEC,QAAS,WACPxB,GAAa,IAFjB,yBASJ,UAAC,KAAD,CAAYyB,UAAU,eAAtB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAUC,SAAS,UAAnB,4CAGA,SAAC,KAAD,CACEC,MAAOzB,EACP0B,YAAY,sBACZC,YAAa,SAACC,GAAD,OAAO3B,EAAY2B,EAAEC,OAAOJ,QACzCK,YAAU,QAGd,iBAAKP,UAAU,cAAf,WACE,UAAC,KAAD,CACED,QAAS,WACPxB,GAAa,IAEfiC,MAAM,UAJR,WAME,SAAC,KAAD,CAASV,KAAK,QAAQW,KAAMC,EAAAA,MAN9B,cASA,UAAC,KAAD,CACEX,QAAS,WACPhB,KAEFyB,MAAM,UAJR,WAME,SAAC,KAAD,CAASV,KAAK,QAAQW,KAAMC,EAAAA,MAN9B,wBAUF,gBAAKV,UAAU,cAAf,UACE,gBAAKW,IAAKlC,EAAUmC,IAAI,cAI9B,SAAC,KAAD,CAAYC,YAAU,EAAtB,UACE,gBAAKb,UAAU,cAAf,UACE,iBAAKA,UAAU,KAAf,WACE,UAAC,KAAD,CACEA,UAAU,kBACVD,QAAS,WACPxB,GAAa,IAHjB,WAME,SAAC,KAAD,CAASkC,KAAMC,EAAAA,IAAqBZ,KAAK,UAN3C,WAUA,gBAAKE,UAAU,mBACf,gBACEA,UAAU,iBACVhB,MAAOL,EACPoB,QAAS,WACPxB,GAAa,IAEfuC,GAAG,oBAGL,iBAAKd,UAAU,WAAf,WACE,eAAIA,UAAU,kBAAd,SACG7B,EAAK4C,YAAYC,eAEpB,cAAGhB,UAAU,gBAAb,SAA8B7B,EAAK4C,YAAYE,SAC/C,SAAC,IAAD,iBE9Hd,IAUA,EAVgB,YACa/C,EAAAA,EAAAA,KAAnBgD,eAER,OACE,SAAC,KAAD,WACE,SAACjD,EAAD","sources":["components/MCprofile/mcprofile.jsx","global/functions.js","pages/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useUser from \"hooks/useUser\";\r\nimport {\r\n  IonContent,\r\n  IonPage,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport \"./mcprofile.css\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport LogoutButton from \"components/auth/logout\";\r\nimport randomString from \"global/functions\";\r\nexport default function MCprofile() {\r\n  const { auth, profile } = useUser();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [imageURL, setImageURL] = useState(profile.image);\r\n  const userImage = {\r\n    backgroundImage: 'url(\"' + profile.image + '\")',\r\n  };\r\n  const tiposavatar = [\r\n    \"adventurer\",\r\n    \"adventurer-neutral\",\r\n    \"avataaars\",\r\n    \"big-ears\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setImageURL(profile.image);\r\n  }, [profile]);\r\n\r\n  const genAvatar = () => {\r\n    var style = tiposavatar[Math.floor(Math.random() * tiposavatar.length)];\r\n    setImageURL(\r\n      \"https://avatars.dicebear.com/api/\" +\r\n        style +\r\n        \"/\" +\r\n        randomString(8) +\r\n        \".svg\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Cambiar foto</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">\r\n              Introduce la URL de la imagen\r\n            </IonLabel>\r\n            <IonInput\r\n              value={imageURL}\r\n              placeholder=\"Enter new image URL\"\r\n              onIonChange={(e) => setImageURL(e.detail.value)}\r\n              clearInput\r\n            ></IonInput>\r\n          </IonItem>\r\n          <div className=\"buttons-div\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n              color=\"success\"\r\n            >\r\n              <IonIcon slot=\"start\" icon={Icons.logInOutline} />\r\n              Guardar\r\n            </IonButton>\r\n            <IonButton\r\n              onClick={() => {\r\n                genAvatar();\r\n              }}\r\n              color=\"warning\"\r\n            >\r\n              <IonIcon slot=\"start\" icon={Icons.imageOutline} />\r\n              Generar Avatar\r\n            </IonButton>\r\n          </div>\r\n          <div className=\"imageCanvas\">\r\n            <img src={imageURL} alt=\"\" />\r\n          </div>\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonContent fullscreen>\r\n        <div className=\"profile-div\">\r\n          <div className=\"up\">\r\n            <IonLabel\r\n              className=\"icon-edit-photo\"\r\n              onClick={() => {\r\n                setShowModal(true);\r\n              }}\r\n            >\r\n              <IonIcon icon={Icons.createOutline} slot=\"start\"></IonIcon>\r\n              Edit\r\n            </IonLabel>\r\n\r\n            <div className=\"up__bkg-photo\"></div>\r\n            <div\r\n              className=\"up__face-photo\"\r\n              style={userImage}\r\n              onClick={() => {\r\n                setShowModal(true);\r\n              }}\r\n              id=\"trigger-button\"\r\n            ></div>\r\n\r\n            <div className=\"up__text\">\r\n              <h3 className=\"up__text-header\">\r\n                {auth.currentUser.displayName}\r\n              </h3>\r\n              <p className=\"up__text-para\">{auth.currentUser.email}</p>\r\n              <LogoutButton />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </>\r\n  );\r\n}\r\n","export default function randomString(length) {\r\n  var result = \"\";\r\n  var characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  var charactersLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport \"./Profile.css\";\r\nimport useUser from \"hooks/useUser\";\r\nimport MCloading from \"components/MCloading/MCloading\";\r\nimport MCprofile from \"components/MCprofile/mcprofile\";\r\nimport React from \"react\";\r\n\r\nconst Profile = () => {\r\n  const { loadingprofile } = useUser();\r\n\r\n  return (\r\n    <IonPage>\r\n      <MCprofile />\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["MCprofile","useUser","auth","profile","useState","showModal","setShowModal","image","imageURL","setImageURL","userImage","backgroundImage","tiposavatar","useEffect","genAvatar","style","Math","floor","random","length","result","charactersLength","i","charAt","randomString","isOpen","initialBreakpoint","breakpoints","onDidDismiss","slot","onClick","className","position","value","placeholder","onIonChange","e","detail","clearInput","color","icon","Icons","src","alt","fullscreen","id","currentUser","displayName","email","loadingprofile"],"sourceRoot":""}
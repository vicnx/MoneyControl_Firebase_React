{"version":3,"file":"static/js/5489.e89b3735.chunk.js","mappings":"oRAwHA,EA5GsB,SAACA,GACrB,OAQIC,EAAAA,EAAAA,KAPFC,EADF,EACEA,QACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,WACAC,EANF,EAMEA,MACAC,EAPF,EAOEA,SAEF,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,gCACGV,GACC,SAAC,IAAD,CACEW,MAAO,OACPC,SAAS,EACTC,IAAK,gCACLC,KAAM,MAENf,GACF,SAAC,KAAD,UACGA,EAAQgB,KAAI,SAACC,EAAGC,GAAJ,OACX,UAAC,KAAD,CAASC,UAAU,cAAnB,WACE,iBAAKA,UAAU,mBAAf,WACE,SAAC,IAAD,CAAeC,KAAMH,EAAEI,MAAOT,MAAOK,EAAEL,SACvC,SAAC,KAAD,CAAUO,UAAU,cAApB,SAAmCF,EAAEG,WAEvC,SAAC,KAAD,CACEE,IAAKL,EAAEM,SACPC,OAAO,UACPC,SAAU,IACVC,UAAU,IACVC,QAAQ,IACRC,SAAU,EACVT,UAAU,oBAGZ,gBAAKA,UAAU,iBAAiBU,KAAK,MAArC,UACE,gBACEV,UAAU,SACVW,QAAS,WACPnB,EAAYM,GACZR,GAAiB,IAJrB,UAOE,SAAC,IAAD,CACEW,KAAK,QACLR,MAAM,uCAzBwBM,QAiC1C,eAEF,SAAC,KAAD,CACEa,OAAQ5B,EAAQ6B,OAChBC,aAAc,kBAAM7B,EAAW,CAAE4B,QAAQ,EAAOE,IAAK,MACrDC,QAAShC,EAAQ+B,IACjBE,KAAMC,EAAAA,kBACNC,SAAS,MACTb,SAAU,IACVb,MAAM,aAER,SAAC,KAAD,CACEmB,OAAQ1B,EAAM2B,OACdC,aAAc,kBAAM3B,EAAS,CAAE0B,QAAQ,EAAOE,IAAK,MACnDC,QAAS9B,EAAM6B,IACfE,KAAMC,EAAAA,kBACNC,SAAS,MACTb,SAAU,IACVb,MAAM,aAER,SAAC,KAAD,CACEmB,OAAQvB,EACRyB,aAAc,kBAAMxB,GAAiB,IAErC8B,OAAQ,kBACRJ,QACE,wDACAzB,EAASU,KACT,aAEFoB,QAAS,CACP,CACEC,KAAM,WACNC,KAAM,SACNC,SAAU,YACVC,GAAI,iBAEN,CACEH,KAAM,UACNG,GAAI,iBACJC,QAAS,WACP3C,EAAaQ,a,sDCrE3B,IA1BsB,SAAC,GAA2B,IAAzBU,EAAwB,EAAxBA,KAAMR,EAAkB,EAAlBA,MAAOiB,EAAW,EAAXA,KAC9BiB,EAAgBC,EAAM3B,GAE5B,OAAK0B,EAYEjB,GACL,SAAC,KAAD,CACEmB,MAAO,CAAEpC,MAAOA,GAAgB,SAChCwB,KAAMU,EACNjB,KAAMA,GAAc,QAGtB,SAAC,KAAD,CAASmB,MAAO,CAAEpC,MAAOA,GAAgB,SAAWwB,KAAMU,KAfxD,SAAC,KAAD,CACEV,KAAMW,EAAAA,aACNC,MAAO,CAAEpC,MAAOA,GAAgB,SAChCiB,KAAMA,GAAc,S,0JCkC5B,EAvCoB,WAClB,OAAoC9B,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,QAAR,EAAiBC,eAEjB,OADAgD,QAAQC,IAAIlD,IAEV,SAAC,KAAD,WACE,UAAC,KAAD,CACEmD,YAAU,EACVhC,UAAU,cACViC,QAAQ,QACRC,QAAQ,QAJV,WAME,gBAAKlC,UAAU,mBAAf,UACE,SAAC,KAAD,CACEmC,WAAY,eACZC,gBAAgB,UAChBpC,UAAU,YAHZ,UAKE,SAAC,IAAD,CAAeC,KAAK,YAAYR,MAAM,kCAc1C,SAAC,KAAD,CAAYO,UAAU,eAAtB,UACE,SAAC,IAAD","sources":["components/Cuentas/MClistcuentas/mclistcuentas.jsx","components/Generales/DynamicIcons/DynamicIcons.jsx","pages/Cuentas/Cuentas.jsx"],"sourcesContent":["import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistcuentas.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistcuentas = (props) => {\r\n  const {\r\n    cuentas,\r\n    loadingcuentas,\r\n    deleteCuenta,\r\n    success,\r\n    setSuccess,\r\n    error,\r\n    setError,\r\n  } = useCuentas();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadingcuentas ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : cuentas ? (\r\n        <IonList>\r\n          {cuentas.map((c, index) => (\r\n            <IonItem className=\"cuenta-item\" key={index}>\r\n              <div className=\"cuenta-name-info\">\r\n                <DynamicFaIcon name={c.icono} color={c.color} />\r\n                <IonLabel className=\"cuenta-name\">{c.name}</IonLabel>\r\n              </div>\r\n              <CountUp\r\n                end={c.cantidad}\r\n                suffix=\" €\"\r\n                duration={1.5}\r\n                separator=\" \"\r\n                decimal=\",\"\r\n                decimals={2}\r\n                className=\"contador-money\"\r\n              />\r\n\r\n              <div className=\"cuenta-options\" slot=\"end\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"trash\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n      ) : (\r\n        \"Sin cuentas\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Cuenta\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la cuenta</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCuenta(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistcuentas;\r\n","// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Cuentas.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MClistcuentas from \"components/Cuentas/MClistcuentas/mclistcuentas\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CuentasPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  console.log(cuentas);\r\n  return (\r\n    <IonPage>\r\n      <IonContent\r\n        fullscreen\r\n        className=\"cuentasPage\"\r\n        scrollX=\"false\"\r\n        scrollY=\"false\"\r\n      >\r\n        <div className=\"boton_add_parent\">\r\n          <IonRouterLink\r\n            routerLink={\"/cuentas/add\"}\r\n            routerDirection=\"forward\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n        </div>\r\n        {/* <IonHeader fixed className=\"header-cuentas\">\r\n          <IonLabel className=\"title\">Gestión de cuentas</IonLabel>\r\n          <IonRouterLink\r\n            routerLink={\"/cuentas/add\"}\r\n            routerDirection=\"forward\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary\" />\r\n          </IonRouterLink>\r\n        </IonHeader> */}\r\n\r\n        <IonContent className=\"list-cuentas\">\r\n          <MClistcuentas />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CuentasPage;\r\n"],"names":["props","useCuentas","cuentas","loadingcuentas","deleteCuenta","success","setSuccess","error","setError","useState","isConfirmOpen","setIsConfirmOpen","selected","setSelected","color","loading","css","size","map","c","index","className","name","icono","end","cantidad","suffix","duration","separator","decimal","decimals","slot","onClick","isOpen","status","onDidDismiss","msg","message","icon","informationCircle","position","header","buttons","text","role","cssClass","id","handler","IconComponent","Icons","style","console","log","fullscreen","scrollX","scrollY","routerLink","routerDirection"],"sourceRoot":""}
{"version":3,"file":"static/js/6300.f2149c4d.chunk.js","mappings":"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","sources":["components/DynamicIcons/DynamicIcons.jsx","components/MClistgrupos/mclistgrupos.jsx","components/MCjoingroup/mcjoingroup.jsx","pages/Grupos/Grupos.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return <IonIcon icon={Icons.imageOutline} />;\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistgrupos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n  return (\r\n    <>\r\n      {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"5px\",\r\n                borderStyle: \"solid\",\r\n                backgroundColor: c.color,\r\n              }}\r\n            >\r\n              <div className=\"grupo-left\" style={{ backgroundColor: c.color }}>\r\n                {c.isAdmin ? (\r\n                  <div className=\"isAdmin\">\r\n                    <DynamicFaIcon\r\n                      name=\"ellipse\"\r\n                      color=\"var(--ion-color-success)\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <DynamicFaIcon name={c.icono} color=\"white\" />\r\n              </div>\r\n              <div className=\"grupo-right\">\r\n                <div className=\"grupo-r-l\">\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                  <div className=\"gastos_totales\">\r\n                    <span>-1000 €</span>\r\n                  </div>\r\n                  {c.codinv ? (\r\n                    <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                  ) : (\r\n                    <div className=\"codinv\">Grupo privado</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"grupo-r-r\">\r\n                  <div className=\"grupo-options\">\r\n                    {c.isAdmin ? (\r\n                      <div\r\n                        className=\"delete\"\r\n                        onClick={() => {\r\n                          setSelectedDelete(c);\r\n                          setIsConfirmDeleteOpen(true);\r\n                        }}\r\n                      >\r\n                        <DynamicFaIcon\r\n                          name=\"trashOutline\"\r\n                          color=\"var(--ion-color-danger-tint)\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    <DynamicFaIcon\r\n                      name=\"clipboardOutline\"\r\n                      color=\"var(--ion-color-primary)\"\r\n                    />\r\n                    <div\r\n                      className=\"exit\"\r\n                      onClick={() => {\r\n                        setSelected(c);\r\n                        setIsConfirmOpen(true);\r\n                      }}\r\n                    >\r\n                      <DynamicFaIcon\r\n                        name=\"exitOutline\"\r\n                        color=\"var(--ion-color-danger-tint)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grupo-r-participantes\">\r\n                  {c.users.length < 2\r\n                    ? \"Solo tú\"\r\n                    : c.users.length + \" participantes\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonButton,\r\n  IonModal,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonButtons,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcjoingroup.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport MCloading from \"components/MCloading/MCloading\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Grupos.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/DynamicIcons/DynamicIcons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MClistgrupos from \"components/MClistgrupos/mclistgrupos\";\r\nimport MCjoingroup from \"components/MCjoingroup/mcjoingroup\";\r\nconst GruposPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  console.log(\"GruposPage\");\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <div className=\"boton_group\">\r\n          <IonRouterLink\r\n            routerLink={\"/groups/add\"}\r\n            routerDirection=\"none\"\r\n            className=\"boton-add\"\r\n          >\r\n            <DynamicFaIcon name=\"addCircle\" color=\"var(--ion-color-primary)\" />\r\n          </IonRouterLink>\r\n          <MCjoingroup />\r\n        </div>\r\n        <IonContent className=\"list-grupos\">\r\n          <MClistgrupos />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default GruposPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","useGrupos","grupos","exitGroup","loadinggrupos","deleteGroup","checkAdmin","setError","error","success","setSuccess","useState","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","map","c","index","className","borderColor","borderWidth","borderStyle","backgroundColor","isAdmin","icono","codinv","onClick","users","length","isOpen","status","onDidDismiss","msg","message","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","joinGroup","showModal","setShowModal","groupcode","setGroupcode","useEffect","initialBreakpoint","breakpoints","MCloading","loading","value","placeholder","onIonChange","e","detail","clearInput","size","shape","useCuentas","cuentas","loadingcuentas","console","log","fullscreen","scrollX","scrollY","routerLink","routerDirection"],"sourceRoot":""}
{"version":3,"file":"static/js/924.3af60ee9.chunk.js","mappings":"+OA+GA,EA/FyB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAC1BC,QAAQC,IAAI,mBAAoBF,GAChC,OAQIG,EAAAA,EAAAA,KALFC,GAHF,EACEC,OADF,EAEEC,cAFF,EAGEF,UACAG,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,WACAC,EAPF,EAOEA,gBAEF,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,gCACGf,GACC,SAAC,KAAD,CAASgB,UAAU,mBAAnB,SACGhB,EAAMiB,WACHjB,EAAMiB,WAAWC,KAAI,SAACC,EAAGC,GAAJ,OACnB,UAAC,KAAD,CAASJ,UAAU,cAAnB,WACE,iBAAKA,UAAU,mBAAf,WACE,SAAC,IAAD,CAAeK,KAAMF,EAAEG,MAAOC,MAAOJ,EAAEI,SACvC,SAAC,KAAD,CAAUP,UAAU,cAApB,SAAmCG,EAAEE,WAGvC,gBAAKL,UAAU,iBAAiBQ,KAAK,MAArC,UACE,gBACER,UAAU,SACVS,QAAS,WACPV,EAAYI,GACZN,GAAiB,IAJrB,UAOE,SAAC,IAAD,CACEQ,KAAK,QACLE,MAAM,uCAhBwBH,MAsBxC,mBAGN,kBAEF,SAAC,KAAD,CACEM,OAAQlB,EAAQmB,OAChBC,aAAc,kBAAMnB,EAAW,CAAEkB,QAAQ,EAAOE,IAAK,MACrDC,QAAStB,EAAQqB,IACjBE,KAAMC,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVX,MAAM,aAER,SAAC,KAAD,CACEG,OAAQnB,EAAMoB,OACdC,aAAc,kBAAMxB,EAAS,CAAEuB,QAAQ,EAAOE,IAAK,MACnDC,QAASvB,EAAMsB,IACfE,KAAMC,EAAAA,kBACNC,SAAS,MACTC,SAAU,IACVX,MAAM,aAER,SAAC,KAAD,CACEG,OAAQd,EACRgB,aAAc,kBAAMf,GAAiB,IAErCsB,OAAQ,wBACRL,QACE,8DACAhB,EAASO,KACT,aAEFe,QAAS,CACP,CACEC,KAAM,WACNC,KAAM,SACNC,SAAU,YACVC,GAAI,iBAEN,CACEH,KAAM,UACNG,GAAI,iBACJC,QAAS,WACP/B,EAAgBV,EAAOc,a,gLClDrC,EAzCuB,WACrB,IAAM4B,GAAaC,EAAAA,EAAAA,MAAbD,SACN,GAAmDvC,EAAAA,EAAAA,KAA3CG,EAAR,EAAQA,cAAesC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,cAMjC,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAASF,KACR,CAACA,KAGF,SAAC,KAAD,WACE,SAAC,KAAD,CAAYK,YAAU,EAACC,QAAQ,OAAOC,QAAQ,OAA9C,SACG3C,GACC,SAAC,IAAD,CACEiB,MAAO,OACP2B,SAAS,EACTC,IAAK,gCACLC,KAAM,OAGR,iCACE,gBAAKpC,UAAU,cAAf,UACE,SAAC,KAAD,CACEqC,WAAY,iBAAmBX,EAC/BY,gBAAgB,UAChBtC,UAAU,YAHZ,UAKE,SAAC,IAAD,CACEK,KAAK,YACLE,MAAM,kCAKZ,SAAC,IAAD,CAAkBvB,MAAO6C","sources":["components/Grupos/MClistcategorias/mclistcategorias.jsx","pages/Grupos/InfoGrupo/Categorias/categorias.jsx"],"sourcesContent":["import {\r\n  IonAlert,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonToast,\r\n  IonContent,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mclistcategorias.css\";\r\n\r\nconst MClistcategorias = ({ grupo }) => {\r\n  console.log(\"MClistcategorias\", grupo);\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n    deleteCategoria,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {grupo ? (\r\n        <IonList className=\"lista-categorias\">\r\n          {grupo.categories\r\n            ? grupo.categories.map((c, index) => (\r\n                <IonItem className=\"cuenta-item\" key={index}>\r\n                  <div className=\"cuenta-name-info\">\r\n                    <DynamicFaIcon name={c.icono} color={c.color} />\r\n                    <IonLabel className=\"cuenta-name\">{c.name}</IonLabel>\r\n                  </div>\r\n\r\n                  <div className=\"cuenta-options\" slot=\"end\">\r\n                    <div\r\n                      className=\"delete\"\r\n                      onClick={() => {\r\n                        setSelected(c);\r\n                        setIsConfirmOpen(true);\r\n                      }}\r\n                    >\r\n                      <DynamicFaIcon\r\n                        name=\"trash\"\r\n                        color=\"var(--ion-color-danger-tint)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </IonItem>\r\n              ))\r\n            : \"Sin categorias\"}\r\n        </IonList>\r\n      ) : (\r\n        \"Sin categorias\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Categoría\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la categoría</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCategoria(grupo, selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistcategorias;\r\n","import { IonContent, IonPage, IonRouterLink } from \"@ionic/react\";\r\nimport MClistcategorias from \"components/Grupos/MClistcategorias/mclistcategorias\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./categorias.css\";\r\n\r\nconst CategoriasPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, grupoSelected } = useGrupos();\r\n\r\n  useEffect(() => {\r\n    getGroup(groupUID);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"true\" scrollY=\"true\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            <div className=\"botones-div\">\r\n              <IonRouterLink\r\n                routerLink={\"/newcategorie/\" + groupUID}\r\n                routerDirection=\"forward\"\r\n                className=\"boton-add\"\r\n              >\r\n                <DynamicFaIcon\r\n                  name=\"addCircle\"\r\n                  color=\"var(--ion-color-primary)\"\r\n                />\r\n              </IonRouterLink>\r\n            </div>\r\n\r\n            <MClistcategorias grupo={grupoSelected} />\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CategoriasPage;\r\n"],"names":["grupo","console","log","useGrupos","setError","grupos","loadinggrupos","error","success","setSuccess","deleteCategoria","useState","isConfirmOpen","setIsConfirmOpen","selected","setSelected","className","categories","map","c","index","name","icono","color","slot","onClick","isOpen","status","onDidDismiss","msg","message","icon","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","groupUID","useParams","getGroup","grupoSelected","useEffect","fullscreen","scrollX","scrollY","loading","css","size","routerLink","routerDirection"],"sourceRoot":""}
{"version":3,"file":"static/js/9924.d7e9f704.chunk.js","mappings":"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","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Grupos/MCinfogrupo/mcinfogrupo.jsx","components/Grupos/MCjoingroup/mcjoingroup.jsx","components/Grupos/MClistgrupos/mclistgrupos.jsx","pages/Grupos/InfoGrupo/Categorias/categorias.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonRouterLink,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFabList,\r\n  IonButton,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useUser from \"hooks/useUser\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcinfogrupo.css\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCinfogrupo = ({ grupo }) => {\r\n  // const { profile } = useUser();\r\n  useEffect(() => {\r\n    console.log(grupo);\r\n  }, [grupo]);\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header-info-grupo\"\r\n        style={{ backgroundColor: grupo.color }}\r\n      >\r\n        <span\r\n          style={\r\n            grupo.name\r\n              ? grupo.name.length < 10\r\n                ? { fontSize: \"30px\" }\r\n                : { fontSize: \"20px\" }\r\n              : null\r\n          }\r\n        >\r\n          {grupo.name}\r\n        </span>\r\n        {grupo.isAdmin ? (\r\n          <IonFab className=\"grupo-info-fab\">\r\n            <IonFabButton color=\"success\" className=\"grupo-info-fab-first\">\r\n              <DynamicFaIcon name={\"arrowBackOutline\"} color=\"white\" />\r\n            </IonFabButton>\r\n            <IonFabList side=\"start\" className=\"grupo-info-list\">\r\n              <IonFabButton color=\"warning\" className=\"grupo-info-fab-button\">\r\n                <DynamicFaIcon name={\"pencilOutline\"} color=\"black\" />\r\n              </IonFabButton>\r\n              <IonRouterLink\r\n                routerLink={\"/categories/\" + grupo.docid}\r\n                routerDirection=\"forward\"\r\n              >\r\n                <IonFabButton\r\n                  color=\"secondary\"\r\n                  className=\"grupo-info-fab-button\"\r\n                >\r\n                  <DynamicFaIcon name={\"appsOutline\"} color=\"black\" />\r\n                </IonFabButton>\r\n              </IonRouterLink>\r\n            </IonFabList>\r\n          </IonFab>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <IonContent className=\"content-info-grupo\">\r\n        {/* <MClistgrupos /> */}\r\n      </IonContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCinfogrupo;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonButton,\r\n  IonModal,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonButtons,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcjoingroup.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistgrupos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadinggrupos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <IonRouterLink\r\n              routerLink={\"/group/\" + c.docid}\r\n              routerDirection=\"forward\"\r\n            >\r\n              <div\r\n                className=\"grupo-item\"\r\n                key={index}\r\n                style={{\r\n                  borderColor: c.color,\r\n                  borderWidth: \"5px\",\r\n                  borderStyle: \"solid\",\r\n                  backgroundColor: c.color,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"grupo-left\"\r\n                  style={{ backgroundColor: c.color }}\r\n                >\r\n                  {c.isAdmin ? (\r\n                    <div className=\"isAdmin\">\r\n                      <DynamicFaIcon\r\n                        name=\"ellipse\"\r\n                        color=\"var(--ion-color-success)\"\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <DynamicFaIcon name={c.icono} color=\"white\" />\r\n                </div>\r\n                <div className=\"grupo-right\">\r\n                  <div className=\"grupo-r-l\">\r\n                    <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                      {c.name}\r\n                    </IonLabel>\r\n                    <div className=\"gastos_totales\">\r\n                      <span>-1000 €</span>\r\n                    </div>\r\n                    {c.codinv ? (\r\n                      <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                    ) : (\r\n                      <div className=\"codinv\">Grupo privado</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"grupo-r-r\">\r\n                    <div className=\"grupo-options\">\r\n                      {c.isAdmin && !c.default ? (\r\n                        <div\r\n                          className=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelectedDelete(c);\r\n                            setIsConfirmDeleteOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"trashOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {c.codinv ? (\r\n                        <div\r\n                          className=\"copy\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            navigator.clipboard.writeText(c.codinv);\r\n                            setSuccess({\r\n                              status: true,\r\n                              msg: \"Código de grupo copiado\",\r\n                            });\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"clipboardOutline\"\r\n                            color=\"var(--ion-color-primary)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {!c.default ? (\r\n                        <div\r\n                          className=\"exit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelected(c);\r\n                            setIsConfirmOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"exitOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grupo-r-participantes\">\r\n                    {c.default\r\n                      ? \"És tu grupo principal\"\r\n                      : c.users.length < 2\r\n                      ? \"Solo tú\"\r\n                      : c.users.length + \" participantes\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </IonRouterLink>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./categorias.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MClistgrupos from \"components/Grupos/MClistgrupos/mclistgrupos\";\r\nimport MCjoingroup from \"components/Grupos/MCjoingroup/mcjoingroup\";\r\nimport MCinfogrupo from \"components/Grupos/MCinfogrupo/mcinfogrupo\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nconst CategoriasPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, setgrupoSelected, grupoSelected } =\r\n    useGrupos();\r\n\r\n  useEffect(() => {\r\n    console.log(\"categorias page\", groupUID);\r\n    getGroup(groupUID);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            CATEGORIAS\r\n            {/* <MCinfogrupo grupo={grupoSelected} /> */}\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CategoriasPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","grupo","useEffect","console","log","useGrupos","grupos","loadinggrupos","exitGroup","checkAdmin","deleteGroup","setError","error","success","setSuccess","className","backgroundColor","length","fontSize","isAdmin","side","routerLink","docid","routerDirection","joinGroup","useState","showModal","setShowModal","groupcode","setGroupcode","status","isOpen","initialBreakpoint","breakpoints","onDidDismiss","onClick","MCloading","loading","position","value","placeholder","onIonChange","e","detail","clearInput","size","shape","msg","message","informationCircle","duration","props","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","css","map","c","index","borderColor","borderWidth","borderStyle","icono","codinv","default","preventDefault","stopPropagation","navigator","clipboard","writeText","users","header","buttons","text","role","cssClass","id","handler","groupUID","useParams","getGroup","setgrupoSelected","grupoSelected","fullscreen","scrollX","scrollY"],"sourceRoot":""}
{"version":3,"file":"static/js/9515.fced23f5.chunk.js","mappings":"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","sources":["components/Cuentas/MCdatoscuenta/mcdatoscuenta.jsx","components/Cuentas/MClistcuentas/mclistcuentas.jsx","components/Generales/DynamicIcons/DynamicIcons.jsx","components/Generales/MCcolores/mccolores.jsx","components/Generales/MCiconos/mciconos.jsx","pages/Cuentas/DatosCuenta/DatosCuenta.jsx"],"sourcesContent":["import { IonLabel, IonToast, IonItem, IonInput, IonButton } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcdatoscuenta.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\n\r\nconst MCdatoscuenta = (props) => {\r\n  const { profile, updateProfile, loadingprofile } = useUser();\r\n  const { cuentas, createNewCuenta, success, setSuccess } = useCuentas();\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"cashOutline\");\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveCuenta() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewCuenta = {\r\n      uid: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      cantidad: cantidad ? cantidad.replace(/,/g, \".\") : 0,\r\n      name: name,\r\n    };\r\n    console.log(\"NewCuenta\", NewCuenta);\r\n    createNewCuenta(NewCuenta);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"mc-input value\">\r\n            <span>Valor inicial (EUR)</span>\r\n            <div className=\"input-currency\">\r\n              <button\r\n                id=\"decrement\"\r\n                className=\"button-decrement\"\r\n                onClick={(e) => {\r\n                  if (!(cantidad < 1)) {\r\n                    setCantidad(cantidad - 1);\r\n                  }\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"removeCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n              <CurrencyInput\r\n                className=\"valueInput\"\r\n                id=\"input-example\"\r\n                name=\"input-name\"\r\n                placeholder=\"Valor inicial de la cuenta\"\r\n                defaultValue={0}\r\n                value={cantidad}\r\n                decimalsLimit={2}\r\n                onValueChange={(value) => {\r\n                  setCantidad(value);\r\n                }}\r\n                suffix=\" â‚¬\"\r\n              />\r\n              <button\r\n                id=\"increment\"\r\n                className=\"button-increment\"\r\n                onClick={(e) => {\r\n                  setCantidad(cantidad + 1);\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"addCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n            </div>\r\n\r\n            {/* <IonLabel position=\"floating\">Valor inicial (EUR)</IonLabel>\r\n            <IonInput\r\n              disabled={success.status}\r\n              value={cantidad}\r\n              type=\"number\"\r\n              maxlength=\"8\"\r\n              placeholder=\"Valor inicial de la cuenta en euros\"\r\n              onIonChange={(e) => setCantidad(e.detail.value)}\r\n            ></IonInput> */}\r\n          </div>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre de la cuenta <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n          />\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveCuenta}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatoscuenta;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistcuentas.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistcuentas = (props) => {\r\n  const {\r\n    cuentas,\r\n    loadingcuentas,\r\n    deleteCuenta,\r\n    success,\r\n    setSuccess,\r\n    error,\r\n    setError,\r\n  } = useCuentas();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadingcuentas ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : cuentas ? (\r\n        <IonList>\r\n          {cuentas.map((c, index) => (\r\n            <IonItem className=\"cuenta-item\" key={index}>\r\n              <div className=\"cuenta-name-info\">\r\n                <DynamicFaIcon name={c.icono} color={c.color} />\r\n                <IonLabel className=\"cuenta-name\">{c.name}</IonLabel>\r\n              </div>\r\n              <CountUp\r\n                end={c.cantidad}\r\n                suffix=\" â‚¬\"\r\n                duration={1.5}\r\n                separator=\" \"\r\n                decimal=\",\"\r\n                decimals={2}\r\n                className=\"contador-money\"\r\n              />\r\n\r\n              <div className=\"cuenta-options\" slot=\"end\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"trash\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n      ) : (\r\n        \"Sin cuentas\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Cuenta\"}\r\n        message={\r\n          \"Â¿Seguro que quieres elimiar la cuenta</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCuenta(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistcuentas;\r\n","// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mccolores.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCiconos = (props) => {\r\n  const iconosCuentas = [\r\n    \"walletOutline\",\r\n    \"cardOutline\",\r\n    \"logoPaypal\",\r\n    \"cashOutline\",\r\n    \"contrastOutline\",\r\n    \"earthOutline\",\r\n    \"serverOutline\",\r\n    \"happyOutline\",\r\n    \"flashOutline\",\r\n    \"flaskOutline\",\r\n    \"globeOutline\",\r\n    \"heartOutline\",\r\n    \"flowerOutline\",\r\n    \"rocketOutline\",\r\n  ];\r\n\r\n  const iconosGrupos = [\r\n    \"happyOutline\",\r\n    \"flashOutline\",\r\n    \"flaskOutline\",\r\n    \"globeOutline\",\r\n    \"heartOutline\",\r\n    \"flowerOutline\",\r\n    \"rocketOutline\",\r\n    \"accessibilityOutline\",\r\n    \"airplaneOutline\",\r\n    \"alarmOutline\",\r\n    \"beerOutline\",\r\n    \"boatOutline\",\r\n    \"barbellOutline\",\r\n    \"bedOutline\",\r\n    \"chatbubblesOutline\",\r\n  ];\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {props.type != \"group\"\r\n            ? iconosCuentas\r\n              ? iconosCuentas.map((i, index) => (\r\n                  <SwiperSlide\r\n                    className={\r\n                      props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                    }\r\n                    style={\r\n                      props.iconoSelected == i\r\n                        ? {\r\n                            borderColor: props.colorSelected,\r\n                            borderWidth: \"3px\",\r\n                            borderStyle: \"solid\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                    key={index}\r\n                    onClick={() => {\r\n                      props.onChange(i);\r\n                    }}\r\n                  >\r\n                    <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                  </SwiperSlide>\r\n                ))\r\n              : \"No hay iconos disponibles\"\r\n            : iconosGrupos\r\n            ? iconosGrupos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n} from \"@ionic/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"./DatosCuenta.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport MClistcuentas from \"components/Cuentas/MClistcuentas/mclistcuentas\";\r\nimport MCdatoscuenta from \"components/Cuentas/MCdatoscuenta/mcdatoscuenta\";\r\n\r\nconst DatosCuentaPage = () => {\r\n  const { cuentas, loadingcuentas } = useCuentas();\r\n  const location = useLocation();\r\n  var str = location.pathname.split(\"/\");\r\n  var type = str[str.length - 1];\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {/* <IonHeader fixed className=\"header-cuentas-datos\">\r\n          <IonLabel className=\"title\">\r\n            {type == \"add\" ? \"Nueva cuenta\" : \"Editar cuenta\"}\r\n          </IonLabel>\r\n        </IonHeader> */}\r\n        <IonContent scrollX=\"true\" scrollY=\"true\">\r\n          <MCdatoscuenta type={type} />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DatosCuentaPage;\r\n"],"names":["props","useUser","profile","loadingprofile","updateProfile","useCuentas","createNewCuenta","cuentas","success","setSuccess","useState","name","setName","error","setError","color","setColor","icono","setIcono","cantidad","setCantidad","isOpen","content","toast","setToast","loading","css","size","className","id","onClick","e","slot","placeholder","defaultValue","value","decimalsLimit","onValueChange","suffix","position","style","maxlength","disabled","status","onIonChange","detail","onChange","newValue","colorSelected","iconoSelected","expand","NewCuenta","uid","replace","console","log","onDidDismiss","message","icon","informationCircle","duration","msg","loadingcuentas","deleteCuenta","isConfirmOpen","setIsConfirmOpen","selected","setSelected","map","c","index","end","separator","decimal","decimals","header","buttons","text","role","cssClass","handler","IconComponent","Icons","colores","backgroundColor","slidesPerView","loop","borderColor","borderWidth","borderStyle","iconosCuentas","iconosGrupos","type","i","str","useLocation","pathname","split","length","fullscreen","scrollX","scrollY"],"sourceRoot":""}
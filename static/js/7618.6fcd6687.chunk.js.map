{"version":3,"file":"static/js/7618.6fcd6687.chunk.js","mappings":"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","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Generales/MCcolores/mccolores.jsx","components/Generales/MCiconos/mciconos.jsx","components/Grupos/MCinfogrupo/mcinfogrupo.jsx","components/Grupos/MCjoingroup/mcjoingroup.jsx","components/Grupos/MClistgrupos/mclistgrupos.jsx","components/Grupos/MClistcategorias/mclistcategorias.jsx","components/Grupos/MCnewcategoria/mcnewcategoria.jsx","pages/Grupos/InfoGrupo/Categorias/categorias.jsx"],"sourcesContent":["// import * as Icons from \"react-icons/io5\";\r\nimport * as Icons from \"ionicons/icons\";\r\nimport {\r\n  IonContent,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonTitle,\r\n  IonItem,\r\n  IonInput,\r\n  IonLabel,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\n\r\n/* Your icon name from database data can now be passed as prop */\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    // Return a default one\r\n\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mccolores.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n    \"#36f443\",\r\n    \"#4336f4\",\r\n    \"#f436a8\",\r\n    \"#9e36f4\",\r\n    \"#36f488\",\r\n    \"#f47f36\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport {\r\n  iconosCuentas,\r\n  iconosGrupos,\r\n  iconosCategorias,\r\n} from \"global/functions\";\r\n\r\nconst MCiconos = (props) => {\r\n  const [iconos, setIconos] = useState(iconosCuentas);\r\n\r\n  useEffect(() => {\r\n    switch (props.type) {\r\n      case \"group\":\r\n        setIconos(iconosGrupos);\r\n        break;\r\n      case \"cuentas\":\r\n        setIconos(iconosCuentas);\r\n        break;\r\n      case \"categories\":\r\n        setIconos(iconosCategorias);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {iconos\r\n            ? iconos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonLabel,\r\n  IonToolbar,\r\n  IonImg,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonRouterLink,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFabList,\r\n  IonButton,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useUser from \"hooks/useUser\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcinfogrupo.css\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\n\r\nconst MCinfogrupo = ({ grupo }) => {\r\n  // const { profile } = useUser();\r\n  useEffect(() => {\r\n    console.log(grupo);\r\n  }, [grupo]);\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header-info-grupo\"\r\n        style={{ backgroundColor: grupo.color }}\r\n      >\r\n        <span\r\n          style={\r\n            grupo.name\r\n              ? grupo.name.length < 10\r\n                ? { fontSize: \"30px\" }\r\n                : { fontSize: \"20px\" }\r\n              : null\r\n          }\r\n        >\r\n          {grupo.name}\r\n        </span>\r\n        {grupo.isAdmin ? (\r\n          <IonFab className=\"grupo-info-fab\">\r\n            <IonFabButton color=\"success\" className=\"grupo-info-fab-first\">\r\n              <DynamicFaIcon name={\"arrowBackOutline\"} color=\"white\" />\r\n            </IonFabButton>\r\n            <IonFabList side=\"start\" className=\"grupo-info-list\">\r\n              <IonFabButton color=\"warning\" className=\"grupo-info-fab-button\">\r\n                <DynamicFaIcon name={\"pencilOutline\"} color=\"black\" />\r\n              </IonFabButton>\r\n              <IonRouterLink\r\n                routerLink={\"/categories/\" + grupo.docid}\r\n                routerDirection=\"forward\"\r\n              >\r\n                <IonFabButton\r\n                  color=\"secondary\"\r\n                  className=\"grupo-info-fab-button\"\r\n                >\r\n                  <DynamicFaIcon name={\"appsOutline\"} color=\"black\" />\r\n                </IonFabButton>\r\n              </IonRouterLink>\r\n            </IonFabList>\r\n          </IonFab>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <IonContent className=\"content-info-grupo\">\r\n        {/* <MClistgrupos /> */}\r\n      </IonContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCinfogrupo;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonButton,\r\n  IonModal,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonButtons,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcjoingroup.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\n\r\nconst MCjoingroup = () => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [groupcode, setGroupcode] = useState(\"\");\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Unirse a un grupo</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el código del grupo\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={groupcode}\r\n                  placeholder=\"Introduce el código del grupo\"\r\n                  onIonChange={(e) => setGroupcode(e.detail.value)}\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => joinGroup(groupcode)}\r\n                >\r\n                  <IonLabel className=\"label\">Unirse</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <IonButton\r\n        className=\"boton-join\"\r\n        size=\"medium\"\r\n        shape=\"round\"\r\n        color=\"danger\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <IonLabel className=\"label\">Unirse a un grupo</IonLabel>\r\n        <DynamicFaIcon name=\"peopleOutline\" color=\"white\" slot=\"end\" />\r\n      </IonButton>\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCjoingroup;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistgrupos.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\n\r\nconst MClistgrupos = (props) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isConfirmDeleteOpen, setIsConfirmDeleteOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedDelete, setSelectedDelete] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadinggrupos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <IonRouterLink\r\n              routerLink={\"/group/\" + c.docid}\r\n              routerDirection=\"forward\"\r\n            >\r\n              <div\r\n                className=\"grupo-item\"\r\n                key={index}\r\n                style={{\r\n                  borderColor: c.color,\r\n                  borderWidth: \"5px\",\r\n                  borderStyle: \"solid\",\r\n                  backgroundColor: c.color,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"grupo-left\"\r\n                  style={{ backgroundColor: c.color }}\r\n                >\r\n                  {c.isAdmin ? (\r\n                    <div className=\"isAdmin\">\r\n                      <DynamicFaIcon\r\n                        name=\"ellipse\"\r\n                        color=\"var(--ion-color-success)\"\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <DynamicFaIcon name={c.icono} color=\"white\" />\r\n                </div>\r\n                <div className=\"grupo-right\">\r\n                  <div className=\"grupo-r-l\">\r\n                    <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                      {c.name}\r\n                    </IonLabel>\r\n                    <div className=\"gastos_totales\">\r\n                      <span>-1000 €</span>\r\n                    </div>\r\n                    {c.codinv ? (\r\n                      <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n                    ) : (\r\n                      <div className=\"codinv\">Grupo privado</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"grupo-r-r\">\r\n                    <div className=\"grupo-options\">\r\n                      {c.isAdmin && !c.default ? (\r\n                        <div\r\n                          className=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelectedDelete(c);\r\n                            setIsConfirmDeleteOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"trashOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {c.codinv ? (\r\n                        <div\r\n                          className=\"copy\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            navigator.clipboard.writeText(c.codinv);\r\n                            setSuccess({\r\n                              status: true,\r\n                              msg: \"Código de grupo copiado\",\r\n                            });\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"clipboardOutline\"\r\n                            color=\"var(--ion-color-primary)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {!c.default ? (\r\n                        <div\r\n                          className=\"exit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            setSelected(c);\r\n                            setIsConfirmOpen(true);\r\n                          }}\r\n                        >\r\n                          <DynamicFaIcon\r\n                            name=\"exitOutline\"\r\n                            color=\"var(--ion-color-danger-tint)\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grupo-r-participantes\">\r\n                    {c.default\r\n                      ? \"És tu grupo principal\"\r\n                      : c.users.length < 2\r\n                      ? \"Solo tú\"\r\n                      : c.users.length + \" participantes\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </IonRouterLink>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )}\r\n\r\n      {/* {grupos ? (\r\n        <div>\r\n          {grupos.map((c, index) => (\r\n            <div\r\n              className=\"grupo-item\"\r\n              key={index}\r\n              style={{\r\n                borderColor: c.color,\r\n                borderWidth: \"4px\",\r\n                borderStyle: \"solid\",\r\n              }}\r\n            >\r\n              <div className=\"grupo-name-info\">\r\n                <div className=\"grupo-name-info-top\">\r\n                  <DynamicFaIcon name={c.icono} color={c.color} />\r\n                  <IonLabel className=\"grupo-name\" style={{ color: c.color }}>\r\n                    {c.name}\r\n                  </IonLabel>\r\n                </div>\r\n                <div className=\"grupo-name-info-bottom\">{c.desc}</div>\r\n              </div>\r\n              <div className=\"gastos_totales\">\r\n                <span>-1000 €</span>\r\n              </div>\r\n\r\n              <div className=\"grupo-options\">\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={() => {\r\n                    setSelected(c);\r\n                    setIsConfirmOpen(true);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon\r\n                    name=\"exitOutline\"\r\n                    color=\"var(--ion-color-danger-tint)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {c.codinv ? (\r\n                <div className=\"codinv\">CODIGO: {c.codinv}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"Sin grupos\"\r\n      )} */}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Salir del grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres salir de </br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Salir\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              exitGroup(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmDeleteOpen}\r\n        onDidDismiss={() => setIsConfirmDeleteOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar grupo\"}\r\n        message={\r\n          \"¿Seguro que quieres eliminar el grupo </br><strong>\" +\r\n          selectedDelete.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"ELIMINAR\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteGroup(selectedDelete);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgrupos;\r\n","import { IonLabel, IonList, IonItem, IonToast, IonAlert } from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mclistcategorias.css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\n\r\nconst MClistcategorias = ({ grupo }) => {\r\n  console.log(\"MClistcategorias\", grupo);\r\n  const { grupos, loadinggrupos, setError, error, success, setSuccess } =\r\n    useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {grupo ? (\r\n        <IonList>\r\n          {grupo.categories\r\n            ? grupo.categories.map((c, index) => (\r\n                <IonItem className=\"cuenta-item\" key={index}>\r\n                  <div className=\"cuenta-name-info\">\r\n                    <DynamicFaIcon name={c.icono} color={c.color} />\r\n                    <IonLabel className=\"cuenta-name\">{c.name}</IonLabel>\r\n                  </div>\r\n\r\n                  <div className=\"cuenta-options\" slot=\"end\">\r\n                    <div\r\n                      className=\"delete\"\r\n                      onClick={() => {\r\n                        setSelected(c);\r\n                        setIsConfirmOpen(true);\r\n                      }}\r\n                    >\r\n                      <DynamicFaIcon\r\n                        name=\"trash\"\r\n                        color=\"var(--ion-color-danger-tint)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </IonItem>\r\n              ))\r\n            : \"Sin categorias\"}\r\n        </IonList>\r\n      ) : (\r\n        \"Sin categorias\"\r\n      )}\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Categoría\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la categoría</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              // deleteCuenta(selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistcategorias;\r\n","import {\r\n  IonLabel,\r\n  IonList,\r\n  IonItem,\r\n  IonToast,\r\n  IonAlert,\r\n  IonButton,\r\n  IonModal,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonButtons,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mcnewcategoria.css\";\r\n\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport MCloading from \"components/Generales/MCloading/MCloading\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nconst MCnewcategoria = (props) => {\r\n  const { error, setError, joinGroup, loadinggrupos, success, setSuccess } =\r\n    useGrupos();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"shirtOutline\");\r\n  const [newCategoria, setNewCategoria] = useState({\r\n    name: \"\",\r\n    icono: \"shirtOutline\",\r\n    color: \"#F44336\",\r\n  });\r\n  const [isErrorOpen, setIsErrorOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (success.status && showModal) {\r\n      setShowModal(false);\r\n    }\r\n  }, [success]);\r\n\r\n  function changeColor(newValue) {\r\n    setNewCategoria({ ...newCategoria, color: newValue });\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setNewCategoria({ ...newCategoria, icono: newValue });\r\n  }\r\n  function createCategoria() {\r\n    if (!newCategoria.name) {\r\n      setError({\r\n        status: true,\r\n        msg: \"El nombre de la categoría no puede estar vacio\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <IonModal\r\n        isOpen={showModal}\r\n        initialBreakpoint={0.5}\r\n        breakpoints={[0, 0.5, 1]}\r\n        onDidDismiss={() => setShowModal(false)}\r\n      >\r\n        <IonToolbar>\r\n          <IonTitle>Nueva categoría</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n        <IonContent className=\"modalContent\">\r\n          {loadinggrupos ? (\r\n            <MCloading loading={true} />\r\n          ) : (\r\n            <>\r\n              <IonItem>\r\n                <IonLabel position=\"stacked\">\r\n                  Introduce el nombre de la categoría{\" \"}\r\n                  <span className=\"required\">*</span>\r\n                </IonLabel>\r\n                <IonInput\r\n                  value={newCategoria.name}\r\n                  placeholder=\"Introduce el nombre de la categoría\"\r\n                  onIonChange={(e) =>\r\n                    setNewCategoria({ ...newCategoria, name: e.detail.value })\r\n                  }\r\n                  clearInput\r\n                ></IonInput>\r\n              </IonItem>\r\n              <MCcolores\r\n                onChange={changeColor}\r\n                colorSelected={newCategoria.color}\r\n              />\r\n              <MCiconos\r\n                onChange={changeIcono}\r\n                colorSelected={newCategoria.color}\r\n                iconoSelected={newCategoria.icono}\r\n                type=\"categories\"\r\n              />\r\n              <div className=\"buttons-div\">\r\n                <IonButton\r\n                  className=\"boton-join\"\r\n                  size=\"medium\"\r\n                  shape=\"round\"\r\n                  color=\"success\"\r\n                  onClick={() => createCategoria()}\r\n                >\r\n                  <IonLabel className=\"label\">Crear</IonLabel>\r\n                  <DynamicFaIcon\r\n                    name=\"checkmarkOutline\"\r\n                    color=\"black\"\r\n                    slot=\"end\"\r\n                  />\r\n                </IonButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </IonContent>\r\n      </IonModal>\r\n      <div className=\"button-add\">\r\n        <IonButton\r\n          className=\"boton-new-categoria\"\r\n          size=\"medium\"\r\n          shape=\"round\"\r\n          color=\"primary\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          <span>Nueva categoría</span>\r\n          <DynamicFaIcon name=\"add\" color=\"white\" slot=\"end\" />\r\n        </IonButton>\r\n      </div>\r\n\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"danger\"\r\n      />\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCnewcategoria;\r\n","import {\r\n  IonContent,\r\n  IonPage,\r\n  IonLabel,\r\n  IonIcon,\r\n  IonHeader,\r\n  IonItem,\r\n  IonButton,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./categorias.css\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport CountUp from \"react-countup\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MClistgrupos from \"components/Grupos/MClistgrupos/mclistgrupos\";\r\nimport MCjoingroup from \"components/Grupos/MCjoingroup/mcjoingroup\";\r\nimport MCinfogrupo from \"components/Grupos/MCinfogrupo/mcinfogrupo\";\r\nimport MClistcategorias from \"components/Grupos/MClistcategorias/mclistcategorias\";\r\nimport MCnewcategoria from \"components/Grupos/MCnewcategoria/mcnewcategoria\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nconst CategoriasPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, setgrupoSelected, grupoSelected } =\r\n    useGrupos();\r\n\r\n  useEffect(() => {\r\n    console.log(\"categorias page\", groupUID);\r\n    getGroup(groupUID);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            <MCnewcategoria />\r\n            <MClistcategorias grupo={grupoSelected} />\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CategoriasPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","colores","className","backgroundColor","colorSelected","slidesPerView","loop","map","c","index","borderColor","borderWidth","borderStyle","onClick","onChange","useState","iconosCuentas","iconos","setIconos","useEffect","type","iconosGrupos","iconosCategorias","i","iconoSelected","grupo","console","log","useGrupos","grupos","loadinggrupos","exitGroup","checkAdmin","deleteGroup","setError","error","success","setSuccess","length","fontSize","isAdmin","side","routerLink","docid","routerDirection","joinGroup","showModal","setShowModal","groupcode","setGroupcode","status","isOpen","initialBreakpoint","breakpoints","onDidDismiss","MCloading","loading","position","value","placeholder","onIonChange","e","detail","clearInput","size","shape","msg","message","informationCircle","duration","isConfirmOpen","setIsConfirmOpen","isConfirmDeleteOpen","setIsConfirmDeleteOpen","selected","setSelected","selectedDelete","setSelectedDelete","css","icono","codinv","default","preventDefault","stopPropagation","navigator","clipboard","writeText","users","header","buttons","text","role","cssClass","id","handler","categories","newCategoria","setNewCategoria","newValue","groupUID","useParams","getGroup","grupoSelected","setgrupoSelected","fullscreen","scrollX","scrollY"],"sourceRoot":""}
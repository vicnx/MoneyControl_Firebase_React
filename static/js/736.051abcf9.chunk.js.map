{"version":3,"file":"static/js/736.051abcf9.chunk.js","mappings":"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","sources":["components/Generales/DynamicIcons/DynamicIcons.jsx","components/Generales/MCcolores/mccolores.jsx","components/Generales/MCiconos/mciconos.jsx","../node_modules/react-currency-input-field/node_modules/tslib/tslib.es6.js","../node_modules/react-currency-input-field/src/components/utils/escapeRegExp.ts","../node_modules/react-currency-input-field/src/components/utils/parseAbbrValue.ts","../node_modules/react-currency-input-field/src/components/utils/cleanValue.ts","../node_modules/react-currency-input-field/src/components/utils/removeSeparators.ts","../node_modules/react-currency-input-field/src/components/utils/removeInvalidChars.ts","../node_modules/react-currency-input-field/src/components/utils/getSuffix.ts","../node_modules/react-currency-input-field/src/components/utils/formatValue.ts","../node_modules/react-currency-input-field/src/components/utils/getLocaleConfig.ts","../node_modules/react-currency-input-field/src/components/utils/isNumber.ts","../node_modules/react-currency-input-field/src/components/CurrencyInput.tsx","../node_modules/react-currency-input-field/src/components/utils/repositionCursor.ts","../node_modules/react-currency-input-field/src/components/utils/fixedDecimalValue.ts","../node_modules/react-currency-input-field/src/components/utils/padTrimValue.ts","components/Cuentas/MCdatoscuenta/mcdatoscuenta.jsx","pages/Cuentas/DatosCuenta/DatosCuenta.jsx"],"sourcesContent":["import { IonIcon } from \"@ionic/react\";\r\nimport * as Icons from \"ionicons/icons\";\r\n\r\nconst DynamicFaIcon = ({ name, color, slot }) => {\r\n  const IconComponent = Icons[name];\r\n\r\n  if (!IconComponent) {\r\n    return (\r\n      <IonIcon\r\n        icon={Icons.imageOutline}\r\n        style={{ color: color ? color : \"black\" }}\r\n        slot={slot ? slot : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  return slot ? (\r\n    <IonIcon\r\n      style={{ color: color ? color : \"black\" }}\r\n      icon={IconComponent}\r\n      slot={slot ? slot : null}\r\n    />\r\n  ) : (\r\n    <IonIcon style={{ color: color ? color : \"black\" }} icon={IconComponent} />\r\n  );\r\n};\r\n\r\nexport default DynamicFaIcon;\r\n","import React from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"./mccolores.css\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n    \"#36f443\",\r\n    \"#4336f4\",\r\n    \"#f436a8\",\r\n    \"#9e36f4\",\r\n    \"#36f488\",\r\n    \"#f47f36\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport {\r\n  iconosCuentas,\r\n  iconosGrupos,\r\n  iconosCategorias,\r\n} from \"global/functions\";\r\n\r\nconst MCiconos = (props) => {\r\n  const [iconos, setIconos] = useState(iconosCuentas);\r\n\r\n  useEffect(() => {\r\n    switch (props.type) {\r\n      case \"group\":\r\n        setIconos(iconosGrupos);\r\n        break;\r\n      case \"cuentas\":\r\n        setIconos(iconosCuentas);\r\n        break;\r\n      case \"categories\":\r\n        setIconos(iconosCategorias);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {iconos\r\n            ? iconos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Escape regex char\n *\n * See: https://stackoverflow.com/questions/17885855/use-dynamic-variable-string-as-regex-pattern-in-javascript\n */\nexport const escapeRegExp = (stringToGoIntoTheRegex: string): string => {\n  return stringToGoIntoTheRegex.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Abbreviate number eg. 1000 = 1k\n *\n * Source: https://stackoverflow.com/a/9345181\n */\nexport const abbrValue = (value: number, decimalSeparator = '.', _decimalPlaces = 10): string => {\n  if (value > 999) {\n    let valueLength = ('' + value).length;\n    const p = Math.pow;\n    const d = p(10, _decimalPlaces);\n    valueLength -= valueLength % 3;\n\n    const abbrValue = Math.round((value * d) / p(10, valueLength)) / d + ' kMGTPE'[valueLength / 3];\n    return abbrValue.replace('.', decimalSeparator);\n  }\n\n  return String(value);\n};\n\ntype AbbrMap = { [key: string]: number };\n\nconst abbrMap: AbbrMap = { k: 1000, m: 1000000, b: 1000000000 };\n\n/**\n * Parse a value with abbreviation e.g 1k = 1000\n */\nexport const parseAbbrValue = (value: string, decimalSeparator = '.'): number | undefined => {\n  const reg = new RegExp(`(\\\\d+(${escapeRegExp(decimalSeparator)}\\\\d*)?)([kmb])$`, 'i');\n  const match = value.match(reg);\n\n  if (match) {\n    const [, digits, , abbr] = match;\n    const multiplier = abbrMap[abbr.toLowerCase()];\n\n    return Number(digits.replace(decimalSeparator, '.')) * multiplier;\n  }\n\n  return undefined;\n};\n","import { parseAbbrValue } from './parseAbbrValue';\nimport { removeSeparators } from './removeSeparators';\nimport { removeInvalidChars } from './removeInvalidChars';\nimport { escapeRegExp } from './escapeRegExp';\nimport { CurrencyInputProps } from '../CurrencyInputProps';\n\nexport type CleanValueOptions = Pick<\n  CurrencyInputProps,\n  | 'decimalSeparator'\n  | 'groupSeparator'\n  | 'allowDecimals'\n  | 'decimalsLimit'\n  | 'allowNegativeValue'\n  | 'disableAbbreviations'\n  | 'prefix'\n  | 'transformRawValue'\n> & { value: string };\n\n/**\n * Remove prefix, separators and extra decimals from value\n */\nexport const cleanValue = ({\n  value,\n  groupSeparator = ',',\n  decimalSeparator = '.',\n  allowDecimals = true,\n  decimalsLimit = 2,\n  allowNegativeValue = true,\n  disableAbbreviations = false,\n  prefix = '',\n  transformRawValue = (rawValue) => rawValue,\n}: CleanValueOptions): string => {\n  const transformedValue = transformRawValue(value);\n\n  if (transformedValue === '-') {\n    return transformedValue;\n  }\n\n  const abbreviations = disableAbbreviations ? [] : ['k', 'm', 'b'];\n  const reg = new RegExp(`((^|\\\\D)-\\\\d)|(-${escapeRegExp(prefix)})`);\n  const isNegative = reg.test(transformedValue);\n\n  // Is there a digit before the prefix? eg. 1$\n  const [prefixWithValue, preValue] = RegExp(`(\\\\d+)-?${escapeRegExp(prefix)}`).exec(value) || [];\n  const withoutPrefix = prefix\n    ? prefixWithValue\n      ? transformedValue.replace(prefixWithValue, '').concat(preValue)\n      : transformedValue.replace(prefix, '')\n    : transformedValue;\n  const withoutSeparators = removeSeparators(withoutPrefix, groupSeparator);\n  const withoutInvalidChars = removeInvalidChars(withoutSeparators, [\n    groupSeparator,\n    decimalSeparator,\n    ...abbreviations,\n  ]);\n\n  let valueOnly = withoutInvalidChars;\n\n  if (!disableAbbreviations) {\n    // disallow letter without number\n    if (abbreviations.some((letter) => letter === withoutInvalidChars.toLowerCase())) {\n      return '';\n    }\n    const parsed = parseAbbrValue(withoutInvalidChars, decimalSeparator);\n    if (parsed) {\n      valueOnly = String(parsed);\n    }\n  }\n\n  const includeNegative = isNegative && allowNegativeValue ? '-' : '';\n\n  if (decimalSeparator && valueOnly.includes(decimalSeparator)) {\n    const [int, decimals] = withoutInvalidChars.split(decimalSeparator);\n    const trimmedDecimals = decimalsLimit && decimals ? decimals.slice(0, decimalsLimit) : decimals;\n    const includeDecimals = allowDecimals ? `${decimalSeparator}${trimmedDecimals}` : '';\n\n    return `${includeNegative}${int}${includeDecimals}`;\n  }\n\n  return `${includeNegative}${valueOnly}`;\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove group separator from value eg. 1,000 > 1000\n */\nexport const removeSeparators = (value: string, separator = ','): string => {\n  const reg = new RegExp(escapeRegExp(separator), 'g');\n  return value.replace(reg, '');\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove invalid characters\n */\nexport const removeInvalidChars = (value: string, validChars: ReadonlyArray<string>): string => {\n  const chars = escapeRegExp(validChars.join(''));\n  const reg = new RegExp(`[^\\\\d${chars}]`, 'gi');\n  return value.replace(reg, '');\n};\n","import { escapeRegExp } from './escapeRegExp';\ntype Options = {\n  decimalSeparator?: string;\n  groupSeparator?: string;\n};\n\nexport const getSuffix = (\n  value: string,\n  { groupSeparator = ',', decimalSeparator = '.' }: Options\n): string | undefined => {\n  const suffixReg = new RegExp(\n    `\\\\d([^${escapeRegExp(groupSeparator)}${escapeRegExp(decimalSeparator)}0-9]+)`\n  );\n  const suffixMatch = value.match(suffixReg);\n  return suffixMatch ? suffixMatch[1] : undefined;\n};\n","import { IntlConfig } from '../CurrencyInputProps';\nimport { escapeRegExp } from './escapeRegExp';\nimport { getSuffix } from './getSuffix';\n\nexport type FormatValueOptions = {\n  /**\n   * Value to format\n   */\n  value: string | undefined;\n\n  /**\n   * Decimal separator\n   *\n   * Default = '.'\n   */\n  decimalSeparator?: string;\n\n  /**\n   * Group separator\n   *\n   * Default = ','\n   */\n  groupSeparator?: string;\n\n  /**\n   * Turn off separators\n   *\n   * This will override Group separators\n   *\n   * Default = false\n   */\n  disableGroupSeparators?: boolean;\n\n  /**\n   * Intl locale currency config\n   */\n  intlConfig?: IntlConfig;\n\n  /**\n   * Specify decimal scale for padding/trimming\n   *\n   * Eg. 1.5 -> 1.50 or 1.234 -> 1.23\n   */\n  decimalScale?: number;\n\n  /**\n   * Prefix\n   */\n  prefix?: string;\n\n  /**\n   * Suffix\n   */\n  suffix?: string;\n};\n\n/**\n * Format value with decimal separator, group separator and prefix\n */\nexport const formatValue = (options: FormatValueOptions): string => {\n  const {\n    value: _value,\n    decimalSeparator,\n    intlConfig,\n    decimalScale,\n    prefix = '',\n    suffix = '',\n  } = options;\n\n  if (_value === '' || _value === undefined) {\n    return '';\n  }\n\n  if (_value === '-') {\n    return '-';\n  }\n\n  const isNegative = new RegExp(`^\\\\d?-${prefix ? `${escapeRegExp(prefix)}?` : ''}\\\\d`).test(\n    _value\n  );\n\n  const value =\n    decimalSeparator !== '.'\n      ? replaceDecimalSeparator(_value, decimalSeparator, isNegative)\n      : _value;\n\n  const numberFormatter = intlConfig\n    ? new Intl.NumberFormat(\n        intlConfig.locale,\n        intlConfig.currency\n          ? {\n              style: 'currency',\n              currency: intlConfig.currency,\n              minimumFractionDigits: decimalScale || 0,\n              maximumFractionDigits: 20,\n            }\n          : undefined\n      )\n    : new Intl.NumberFormat(undefined, {\n        minimumFractionDigits: decimalScale || 0,\n        maximumFractionDigits: 20,\n      });\n\n  const parts = numberFormatter.formatToParts(Number(value));\n\n  let formatted = replaceParts(parts, options);\n\n  // Does intl formatting add a suffix?\n  const intlSuffix = getSuffix(formatted, { ...options });\n\n  // Include decimal separator if user input ends with decimal separator\n  const includeDecimalSeparator = _value.slice(-1) === decimalSeparator ? decimalSeparator : '';\n\n  const [, decimals] = value.match(RegExp('\\\\d+\\\\.(\\\\d+)')) || [];\n\n  // Keep original decimal padding if no decimalScale\n  if (decimalScale === undefined && decimals && decimalSeparator) {\n    if (formatted.includes(decimalSeparator)) {\n      formatted = formatted.replace(\n        RegExp(`(\\\\d+)(${escapeRegExp(decimalSeparator)})(\\\\d+)`, 'g'),\n        `$1$2${decimals}`\n      );\n    } else {\n      if (intlSuffix && !suffix) {\n        formatted = formatted.replace(intlSuffix, `${decimalSeparator}${decimals}${intlSuffix}`);\n      } else {\n        formatted = `${formatted}${decimalSeparator}${decimals}`;\n      }\n    }\n  }\n\n  if (suffix && includeDecimalSeparator) {\n    return `${formatted}${includeDecimalSeparator}${suffix}`;\n  }\n\n  if (intlSuffix && includeDecimalSeparator) {\n    return formatted.replace(intlSuffix, `${includeDecimalSeparator}${intlSuffix}`);\n  }\n\n  if (intlSuffix && suffix) {\n    return formatted.replace(intlSuffix, `${includeDecimalSeparator}${suffix}`);\n  }\n\n  return [formatted, includeDecimalSeparator, suffix].join('');\n};\n\n/**\n * Before converting to Number, decimal separator has to be .\n */\nconst replaceDecimalSeparator = (\n  value: string,\n  decimalSeparator: FormatValueOptions['decimalSeparator'],\n  isNegative: boolean\n): string => {\n  let newValue = value;\n  if (decimalSeparator && decimalSeparator !== '.') {\n    newValue = newValue.replace(RegExp(escapeRegExp(decimalSeparator), 'g'), '.');\n    if (isNegative && decimalSeparator === '-') {\n      newValue = `-${newValue.slice(1)}`;\n    }\n  }\n  return newValue;\n};\n\nconst replaceParts = (\n  parts: Intl.NumberFormatPart[],\n  {\n    prefix,\n    groupSeparator,\n    decimalSeparator,\n    decimalScale,\n    disableGroupSeparators = false,\n  }: Pick<\n    FormatValueOptions,\n    'prefix' | 'groupSeparator' | 'decimalSeparator' | 'decimalScale' | 'disableGroupSeparators'\n  >\n): string => {\n  return parts\n    .reduce(\n      (prev, { type, value }, i) => {\n        if (i === 0 && prefix) {\n          if (type === 'minusSign') {\n            return [value, prefix];\n          }\n\n          if (type === 'currency') {\n            return [...prev, prefix];\n          }\n\n          return [prefix, value];\n        }\n\n        if (type === 'currency') {\n          return prefix ? prev : [...prev, value];\n        }\n\n        if (type === 'group') {\n          return !disableGroupSeparators\n            ? [...prev, groupSeparator !== undefined ? groupSeparator : value]\n            : prev;\n        }\n\n        if (type === 'decimal') {\n          if (decimalScale !== undefined && decimalScale === 0) {\n            return prev;\n          }\n\n          return [...prev, decimalSeparator !== undefined ? decimalSeparator : value];\n        }\n\n        if (type === 'fraction') {\n          return [...prev, decimalScale !== undefined ? value.slice(0, decimalScale) : value];\n        }\n\n        return [...prev, value];\n      },\n      ['']\n    )\n    .join('');\n};\n","import { IntlConfig } from '../CurrencyInputProps';\n\ntype LocaleConfig = {\n  currencySymbol: string;\n  groupSeparator: string;\n  decimalSeparator: string;\n  prefix: string;\n  suffix: string;\n};\n\nconst defaultConfig: LocaleConfig = {\n  currencySymbol: '',\n  groupSeparator: '',\n  decimalSeparator: '',\n  prefix: '',\n  suffix: '',\n};\n\n/**\n * Get locale config from input or default\n */\nexport const getLocaleConfig = (intlConfig?: IntlConfig): LocaleConfig => {\n  const { locale, currency } = intlConfig || {};\n  const numberFormatter = locale\n    ? new Intl.NumberFormat(locale, currency ? { currency, style: 'currency' } : undefined)\n    : new Intl.NumberFormat();\n\n  return numberFormatter.formatToParts(1000.1).reduce((prev, curr, i): LocaleConfig => {\n    if (curr.type === 'currency') {\n      if (i === 0) {\n        return { ...prev, currencySymbol: curr.value, prefix: curr.value };\n      } else {\n        return { ...prev, currencySymbol: curr.value, suffix: curr.value };\n      }\n    }\n    if (curr.type === 'group') {\n      return { ...prev, groupSeparator: curr.value };\n    }\n    if (curr.type === 'decimal') {\n      return { ...prev, decimalSeparator: curr.value };\n    }\n\n    return prev;\n  }, defaultConfig);\n};\n","export const isNumber = (input: string): boolean => RegExp(/\\d/, 'gi').test(input);\n","import React, { FC, useState, useEffect, useRef, forwardRef, useMemo } from 'react';\nimport { CurrencyInputProps, CurrencyInputOnChangeValues } from './CurrencyInputProps';\nimport {\n  isNumber,\n  cleanValue,\n  fixedDecimalValue,\n  formatValue,\n  getLocaleConfig,\n  padTrimValue,\n  CleanValueOptions,\n  getSuffix,\n  FormatValueOptions,\n  repositionCursor,\n} from './utils';\n\nexport const CurrencyInput: FC<CurrencyInputProps> = forwardRef<\n  HTMLInputElement,\n  CurrencyInputProps\n>(\n  (\n    {\n      allowDecimals = true,\n      allowNegativeValue = true,\n      id,\n      name,\n      className,\n      customInput,\n      decimalsLimit,\n      defaultValue,\n      disabled = false,\n      maxLength: userMaxLength,\n      value: userValue,\n      onValueChange,\n      fixedDecimalLength,\n      placeholder,\n      decimalScale,\n      prefix,\n      suffix,\n      intlConfig,\n      step,\n      min,\n      max,\n      disableGroupSeparators = false,\n      disableAbbreviations = false,\n      decimalSeparator: _decimalSeparator,\n      groupSeparator: _groupSeparator,\n      onChange,\n      onFocus,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n      transformRawValue,\n      ...props\n    }: CurrencyInputProps,\n    ref\n  ) => {\n    if (_decimalSeparator && isNumber(_decimalSeparator)) {\n      throw new Error('decimalSeparator cannot be a number');\n    }\n\n    if (_groupSeparator && isNumber(_groupSeparator)) {\n      throw new Error('groupSeparator cannot be a number');\n    }\n\n    const localeConfig = useMemo(() => getLocaleConfig(intlConfig), [intlConfig]);\n    const decimalSeparator = _decimalSeparator || localeConfig.decimalSeparator || '';\n    const groupSeparator = _groupSeparator || localeConfig.groupSeparator || '';\n\n    if (\n      decimalSeparator &&\n      groupSeparator &&\n      decimalSeparator === groupSeparator &&\n      disableGroupSeparators === false\n    ) {\n      throw new Error('decimalSeparator cannot be the same as groupSeparator');\n    }\n\n    const formatValueOptions: Partial<FormatValueOptions> = {\n      decimalSeparator,\n      groupSeparator,\n      disableGroupSeparators,\n      intlConfig,\n      prefix: prefix || localeConfig.prefix,\n      suffix: suffix,\n    };\n\n    const cleanValueOptions: Partial<CleanValueOptions> = {\n      decimalSeparator,\n      groupSeparator,\n      allowDecimals,\n      decimalsLimit: decimalsLimit || fixedDecimalLength || 2,\n      allowNegativeValue,\n      disableAbbreviations,\n      prefix: prefix || localeConfig.prefix,\n      transformRawValue,\n    };\n\n    const formattedStateValue =\n      defaultValue !== undefined && defaultValue !== null\n        ? formatValue({ ...formatValueOptions, decimalScale, value: String(defaultValue) })\n        : userValue !== undefined && userValue !== null\n        ? formatValue({ ...formatValueOptions, decimalScale, value: String(userValue) })\n        : '';\n\n    const [stateValue, setStateValue] = useState(formattedStateValue);\n    const [dirty, setDirty] = useState(false);\n    const [cursor, setCursor] = useState(0);\n    const [changeCount, setChangeCount] = useState(0);\n    const [lastKeyStroke, setLastKeyStroke] = useState<string | null>(null);\n    const inputRef = ref || useRef<HTMLInputElement>(null);\n\n    /**\n     * Process change in value\n     */\n    const processChange = (value: string, selectionStart?: number | null): void => {\n      setDirty(true);\n\n      const { modifiedValue, cursorPosition } = repositionCursor({\n        selectionStart,\n        value,\n        lastKeyStroke,\n        stateValue,\n        groupSeparator,\n      });\n\n      const stringValue = cleanValue({ value: modifiedValue, ...cleanValueOptions });\n\n      if (userMaxLength && stringValue.replace(/-/g, '').length > userMaxLength) {\n        return;\n      }\n\n      if (stringValue === '' || stringValue === '-' || stringValue === decimalSeparator) {\n        onValueChange && onValueChange(undefined, name, { float: null, formatted: '', value: '' });\n        setStateValue(stringValue);\n        return;\n      }\n\n      const numberValue = parseFloat(stringValue.replace(decimalSeparator, '.'));\n\n      const formattedValue = formatValue({\n        value: stringValue,\n        ...formatValueOptions,\n      });\n\n      if (cursorPosition !== undefined && cursorPosition !== null) {\n        // Prevent cursor jumping\n        let newCursor = cursorPosition + (formattedValue.length - value.length);\n        newCursor = newCursor <= 0 ? (prefix ? prefix.length : 0) : newCursor;\n\n        setCursor(newCursor);\n        setChangeCount(changeCount + 1);\n      }\n\n      setStateValue(formattedValue);\n\n      if (onValueChange) {\n        const values: CurrencyInputOnChangeValues = {\n          float: numberValue,\n          formatted: formattedValue,\n          value: stringValue,\n        };\n        onValueChange(stringValue, name, values);\n      }\n    };\n\n    /**\n     * Handle change event\n     */\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const {\n        target: { value, selectionStart },\n      } = event;\n\n      processChange(value, selectionStart);\n\n      onChange && onChange(event);\n    };\n\n    /**\n     * Handle focus event\n     */\n    const handleOnFocus = (event: React.FocusEvent<HTMLInputElement>): number => {\n      onFocus && onFocus(event);\n      return stateValue ? stateValue.length : 0;\n    };\n\n    /**\n     * Handle blur event\n     *\n     * Format value by padding/trimming decimals if required by\n     */\n    const handleOnBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n      const {\n        target: { value },\n      } = event;\n\n      const valueOnly = cleanValue({ value, ...cleanValueOptions });\n\n      if (valueOnly === '-' || !valueOnly) {\n        setStateValue('');\n        onBlur && onBlur(event);\n        return;\n      }\n\n      const fixedDecimals = fixedDecimalValue(valueOnly, decimalSeparator, fixedDecimalLength);\n\n      const newValue = padTrimValue(\n        fixedDecimals,\n        decimalSeparator,\n        decimalScale !== undefined ? decimalScale : fixedDecimalLength\n      );\n\n      const numberValue = parseFloat(newValue.replace(decimalSeparator, '.'));\n\n      const formattedValue = formatValue({\n        ...formatValueOptions,\n        value: newValue,\n      });\n\n      if (onValueChange) {\n        onValueChange(newValue, name, {\n          float: numberValue,\n          formatted: formattedValue,\n          value: newValue,\n        });\n      }\n\n      setStateValue(formattedValue);\n\n      onBlur && onBlur(event);\n    };\n\n    /**\n     * Handle key down event\n     *\n     * Increase or decrease value by step\n     */\n    const handleOnKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      const { key } = event;\n\n      setLastKeyStroke(key);\n\n      if (step && (key === 'ArrowUp' || key === 'ArrowDown')) {\n        event.preventDefault();\n        setCursor(stateValue.length);\n\n        const currentValue =\n          parseFloat(\n            userValue !== undefined && userValue !== null\n              ? String(userValue).replace(decimalSeparator, '.')\n              : cleanValue({ value: stateValue, ...cleanValueOptions })\n          ) || 0;\n        const newValue = key === 'ArrowUp' ? currentValue + step : currentValue - step;\n\n        if (min !== undefined && newValue < min) {\n          return;\n        }\n\n        if (max !== undefined && newValue > max) {\n          return;\n        }\n\n        const fixedLength = String(step).includes('.')\n          ? Number(String(step).split('.')[1].length)\n          : undefined;\n\n        processChange(\n          String(fixedLength ? newValue.toFixed(fixedLength) : newValue).replace(\n            '.',\n            decimalSeparator\n          )\n        );\n      }\n\n      onKeyDown && onKeyDown(event);\n    };\n\n    /**\n     * Handle key up event\n     *\n     * Move cursor if there is a suffix to prevent user typing past suffix\n     */\n    const handleOnKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      const {\n        key,\n        currentTarget: { selectionStart },\n      } = event;\n      if (key !== 'ArrowUp' && key !== 'ArrowDown' && stateValue !== '-') {\n        const suffix = getSuffix(stateValue, { groupSeparator, decimalSeparator });\n\n        if (suffix && selectionStart && selectionStart > stateValue.length - suffix.length) {\n          /* istanbul ignore else */\n          if (inputRef && typeof inputRef === 'object' && inputRef.current) {\n            const newCursor = stateValue.length - suffix.length;\n            inputRef.current.setSelectionRange(newCursor, newCursor);\n          }\n        }\n      }\n\n      onKeyUp && onKeyUp(event);\n    };\n\n    useEffect(() => {\n      // prevent cursor jumping if editing value\n      if (\n        dirty &&\n        stateValue !== '-' &&\n        inputRef &&\n        typeof inputRef === 'object' &&\n        inputRef.current\n      ) {\n        inputRef.current.setSelectionRange(cursor, cursor);\n      }\n    }, [stateValue, cursor, inputRef, dirty, changeCount]);\n\n    /**\n     * If user has only entered \"-\" or decimal separator,\n     * keep the char to allow them to enter next value\n     */\n    const getRenderValue = () => {\n      if (\n        userValue !== undefined &&\n        userValue !== null &&\n        stateValue !== '-' &&\n        (!decimalSeparator || stateValue !== decimalSeparator)\n      ) {\n        return formatValue({\n          ...formatValueOptions,\n          decimalScale: dirty ? undefined : decimalScale,\n          value: String(userValue),\n        });\n      }\n\n      return stateValue;\n    };\n\n    const inputProps: React.ComponentPropsWithRef<'input'> = {\n      type: 'text',\n      inputMode: 'decimal',\n      id,\n      name,\n      className,\n      onChange: handleOnChange,\n      onBlur: handleOnBlur,\n      onFocus: handleOnFocus,\n      onKeyDown: handleOnKeyDown,\n      onKeyUp: handleOnKeyUp,\n      placeholder,\n      disabled,\n      value: getRenderValue(),\n      ref: inputRef,\n      ...props,\n    };\n\n    if (customInput) {\n      const CustomInput = customInput;\n      return <CustomInput {...inputProps} />;\n    }\n\n    return <input {...inputProps} />;\n  }\n);\n\nCurrencyInput.displayName = 'CurrencyInput';\n\nexport default CurrencyInput;\n","type RepositionCursorProps = {\n  selectionStart?: number | null;\n  value: string;\n  lastKeyStroke: string | null;\n  stateValue?: string;\n  groupSeparator?: string;\n};\n\n/**\n * Based on the last key stroke and the cursor position, update the value\n * and reposition the cursor to the right place\n */\nexport const repositionCursor = ({\n  selectionStart,\n  value,\n  lastKeyStroke,\n  stateValue,\n  groupSeparator,\n}: RepositionCursorProps): {\n  modifiedValue: string;\n  cursorPosition: number | null | undefined;\n} => {\n  let cursorPosition = selectionStart;\n  let modifiedValue = value;\n  if (stateValue && cursorPosition) {\n    const splitValue = value.split('');\n    // if cursor is to right of groupSeparator and backspace pressed, delete the character to the left of the separator and reposition the cursor\n    if (lastKeyStroke === 'Backspace' && stateValue[cursorPosition] === groupSeparator) {\n      splitValue.splice(cursorPosition - 1, 1);\n      cursorPosition -= 1;\n    }\n    // if cursor is to left of groupSeparator and delete pressed, delete the character to the right of the separator and reposition the cursor\n    if (lastKeyStroke === 'Delete' && stateValue[cursorPosition] === groupSeparator) {\n      splitValue.splice(cursorPosition, 1);\n      cursorPosition += 1;\n    }\n    modifiedValue = splitValue.join('');\n    return { modifiedValue, cursorPosition };\n  }\n\n  return { modifiedValue, cursorPosition: selectionStart };\n};\n","export const fixedDecimalValue = (\n  value: string,\n  decimalSeparator: string,\n  fixedDecimalLength?: number\n): string => {\n  if (fixedDecimalLength && value.length > 1) {\n    if (value.includes(decimalSeparator)) {\n      const [int, decimals] = value.split(decimalSeparator);\n      if (decimals.length > fixedDecimalLength) {\n        return `${int}${decimalSeparator}${decimals.slice(0, fixedDecimalLength)}`;\n      }\n    }\n\n    const reg =\n      value.length > fixedDecimalLength\n        ? new RegExp(`(\\\\d+)(\\\\d{${fixedDecimalLength}})`)\n        : new RegExp(`(\\\\d)(\\\\d+)`);\n\n    const match = value.match(reg);\n    if (match) {\n      const [, int, decimals] = match;\n      return `${int}${decimalSeparator}${decimals}`;\n    }\n  }\n\n  return value;\n};\n","export const padTrimValue = (\n  value: string,\n  decimalSeparator = '.',\n  decimalScale?: number\n): string => {\n  if (decimalScale === undefined || value === '' || value === undefined) {\n    return value;\n  }\n\n  if (!value.match(/\\d/g)) {\n    return '';\n  }\n\n  const [int, decimals] = value.split(decimalSeparator);\n\n  if (decimalScale === 0) {\n    return int;\n  }\n\n  let newValue = decimals || '';\n\n  if (newValue.length < decimalScale) {\n    while (newValue.length < decimalScale) {\n      newValue += '0';\n    }\n  } else {\n    newValue = newValue.slice(0, decimalScale);\n  }\n\n  return `${int}${decimalSeparator}${newValue}`;\n};\n","import { IonButton, IonInput, IonItem, IonLabel, IonToast } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcdatoscuenta.css\";\r\n\r\nconst MCdatoscuenta = (props) => {\r\n  const { profile, updateProfile, loadingprofile } = useUser();\r\n  const { cuentas, createNewCuenta, success, setSuccess } = useCuentas();\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"cashOutline\");\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveCuenta() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewCuenta = {\r\n      uid: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      cantidad: cantidad ? cantidad.replace(/,/g, \".\") : 0,\r\n      name: name,\r\n    };\r\n    console.log(\"NewCuenta\", NewCuenta);\r\n    createNewCuenta(NewCuenta);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"mc-input value\">\r\n            <span>Valor inicial (EUR)</span>\r\n            <div className=\"input-currency\">\r\n              <button\r\n                id=\"decrement\"\r\n                className=\"button-decrement\"\r\n                onClick={(e) => {\r\n                  if (!(cantidad < 1)) {\r\n                    setCantidad(cantidad - 1);\r\n                  }\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"removeCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n              <CurrencyInput\r\n                className=\"valueInput\"\r\n                id=\"input-example\"\r\n                name=\"input-name\"\r\n                placeholder=\"Valor inicial de la cuenta\"\r\n                defaultValue={0}\r\n                value={cantidad}\r\n                decimalsLimit={2}\r\n                onValueChange={(value) => {\r\n                  setCantidad(value);\r\n                }}\r\n                suffix=\" €\"\r\n              />\r\n              <button\r\n                id=\"increment\"\r\n                className=\"button-increment\"\r\n                onClick={(e) => {\r\n                  setCantidad(cantidad + 1);\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"addCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n            </div>\r\n\r\n            {/* <IonLabel position=\"floating\">Valor inicial (EUR)</IonLabel>\r\n            <IonInput\r\n              disabled={success.status}\r\n              value={cantidad}\r\n              type=\"number\"\r\n              maxlength=\"8\"\r\n              placeholder=\"Valor inicial de la cuenta en euros\"\r\n              onIonChange={(e) => setCantidad(e.detail.value)}\r\n            ></IonInput> */}\r\n          </div>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre de la cuenta <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n          />\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveCuenta}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatoscuenta;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCdatoscuenta from \"components/Cuentas/MCdatoscuenta/mcdatoscuenta\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./DatosCuenta.css\";\r\n\r\nconst DatosCuentaPage = () => {\r\n  const location = useLocation();\r\n  var str = location.pathname.split(\"/\");\r\n  var type = str[str.length - 1];\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <IonContent scrollX=\"true\" scrollY=\"true\">\r\n          <MCdatoscuenta type={type} />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DatosCuentaPage;\r\n"],"names":["name","color","slot","IconComponent","Icons","style","icon","props","colores","className","backgroundColor","colorSelected","slidesPerView","loop","map","c","index","borderColor","borderWidth","borderStyle","onClick","onChange","useState","iconosCuentas","iconos","setIconos","useEffect","type","iconosGrupos","iconosCategorias","i","iconoSelected","Object","assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__spreadArray","to","from","pack","ar","l","Array","slice","concat","escapeRegExp","stringToGoIntoTheRegex","replace","abbrMap","k","m","b","cleanValue","value","groupSeparator","decimalSeparator","allowDecimals","decimalsLimit","allowNegativeValue","disableAbbreviations","prefix","transformRawValue","transformedValue","rawValue","abbreviations","isNegative","RegExp","test","exec","prefixWithValue","preValue","withoutSeparators","separator","reg","removeSeparators","withoutInvalidChars","validChars","chars","join","removeInvalidChars","valueOnly","some","letter","toLowerCase","parsed","match","digits","abbr","multiplier","Number","parseAbbrValue","String","includeNegative","includes","split","int","decimals","trimmedDecimals","getSuffix","suffixReg","suffixMatch","undefined","formatValue","options","_value","intlConfig","decimalScale","suffix","replaceDecimalSeparator","parts","Intl","NumberFormat","locale","currency","minimumFractionDigits","maximumFractionDigits","formatToParts","formatted","replaceParts","intlSuffix","includeDecimalSeparator","newValue","disableGroupSeparators","reduce","prev","defaultConfig","currencySymbol","isNumber","input","CurrencyInput","forwardRef","ref","id","customInput","defaultValue","disabled","userMaxLength","userValue","onValueChange","fixedDecimalLength","placeholder","step","min","max","_decimalSeparator","_groupSeparator","onFocus","onBlur","onKeyDown","onKeyUp","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Error","localeConfig","useMemo","curr","getLocaleConfig","formatValueOptions","cleanValueOptions","formattedStateValue","stateValue","setStateValue","dirty","setDirty","cursor","setCursor","changeCount","setChangeCount","lastKeyStroke","setLastKeyStroke","inputRef","useRef","processChange","selectionStart","cursorPosition","modifiedValue","splitValue","splice","repositionCursor","stringValue","float","numberValue","parseFloat","formattedValue","newCursor","current","setSelectionRange","inputProps","inputMode","event","fixedDecimals","fixedDecimalValue","padTrimValue","key","preventDefault","currentValue","fixedLength","toFixed","CustomInput","displayName","useUser","profile","loadingprofile","updateProfile","useCuentas","createNewCuenta","cuentas","success","setSuccess","setName","error","setError","setColor","icono","setIcono","cantidad","setCantidad","isOpen","content","toast","setToast","loading","css","size","position","maxlength","status","onIonChange","detail","expand","NewCuenta","uid","console","log","onDidDismiss","message","informationCircle","duration","msg","str","useLocation","pathname","fullscreen","scrollX","scrollY"],"sourceRoot":""}
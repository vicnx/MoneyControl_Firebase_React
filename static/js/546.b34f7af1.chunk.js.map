{"version":3,"file":"static/js/546.b34f7af1.chunk.js","mappings":"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","sources":["components/Grupos/MClistgastos/mclistgastos.jsx","components/Grupos/MCinfogrupo/mcinfogrupo.jsx","pages/Grupos/InfoGrupo/InfoGrupo.jsx"],"sourcesContent":["import {\r\n  IonAlert,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonToast,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mclistgastos.css\";\r\nimport { CONSTANTS } from \"global/functions\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst MClistgastos = ({ gastos, groupuid }) => {\r\n  const gastosViewDefect = 5;\r\n  const gastosViewMaxDefect = 10;\r\n  const {\r\n    grupos,\r\n    loadinggastos,\r\n    loadinggrupos,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n    deleteCategoria,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [gastosview, setGastosview] = useState(5);\r\n\r\n  function viewAll(prop) {\r\n    setGastosview(\r\n      prop\r\n        ? gastos.length < gastosViewMaxDefect\r\n          ? gastos.length\r\n          : gastosViewMaxDefect\r\n        : gastosViewDefect\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadinggastos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          {gastos ? (\r\n            <div className=\"listgastos-component\">\r\n              <span className=\"listgastos-component-title\">Últimos gastos</span>\r\n              <div className=\"info-gastos-pagin\">\r\n                <span className=\"mostrando-text\">\r\n                  Mostrando{\" \"}\r\n                  {gastos.length > gastosViewDefect\r\n                    ? gastosview\r\n                    : gastos.length}{\" \"}\r\n                  de {gastos.length} gastos.\r\n                </span>\r\n\r\n                <IonRouterLink\r\n                  routerLink={\"/spendings/\" + groupuid}\r\n                  routerDirection=\"forward\"\r\n                  className=\"boton-view\"\r\n                >\r\n                  Ver todos\r\n                </IonRouterLink>\r\n              </div>\r\n\r\n              <IonList className=\"lista-gastos\">\r\n                {gastos.length > 0\r\n                  ? gastos\r\n                      .sort((a, b) => (a.fecha < b.fecha ? 1 : -1))\r\n                      .slice(0, gastosview)\r\n                      .map((g, index) => (\r\n                        <div\r\n                          className=\"gasto-item\"\r\n                          key={index}\r\n                          style={{ borderColor: g.categoria.color }}\r\n                        >\r\n                          <div className=\"gasto-name-username\">\r\n                            {g.profileData.name}\r\n                          </div>\r\n                          <div className=\"gasto-name-info\">\r\n                            <div className=\"gasto-name-info-image\">\r\n                              <div\r\n                                className=\"gasto-name-info-image-circle\"\r\n                                style={{\r\n                                  backgroundImage:\r\n                                    'url(\"' +\r\n                                    (g.profileData\r\n                                      ? g.profileData.image\r\n                                      : CONSTANTS.defaultAvatar) +\r\n                                    '\")',\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"gasto-info\">\r\n                            <div className=\"gasto-info-desc\">{g.desc}</div>\r\n                            <div className=\"gasto-info-fecha\">\r\n                              {g.fechaConvert}\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className=\"gasto-cantidad\"\r\n                            style={\r\n                              g.cantidad.length < 7\r\n                                ? { fontSize: \"16px\" }\r\n                                : { fontSize: \"10px\" }\r\n                            }\r\n                          >\r\n                            - {g.cantidad} €\r\n                          </div>\r\n                          <div className=\"gasto-category\">\r\n                            <div className=\"gasto-category-icon\">\r\n                              <DynamicFaIcon\r\n                                name={g.categoria.icono}\r\n                                slot=\"end\"\r\n                                color={g.categoria.color}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"gasto-options\" slot=\"end\"></div>\r\n                        </div>\r\n                      ))\r\n                  : \"Sin gastos\"}\r\n              </IonList>\r\n              {gastos ? (\r\n                gastos.length != gastosViewDefect ? (\r\n                  gastos.length != gastosview ? (\r\n                    gastos.length <= gastosViewDefect ? (\r\n                      <></>\r\n                    ) : (\r\n                      <IonRouterLink\r\n                        onClick={() => viewAll(true)}\r\n                        className=\"boton-view\"\r\n                      >\r\n                        Ver más...\r\n                      </IonRouterLink>\r\n                    )\r\n                  ) : (\r\n                    <IonRouterLink\r\n                      onClick={() => viewAll(false)}\r\n                      className=\"boton-view\"\r\n                    >\r\n                      Ver menos...\r\n                    </IonRouterLink>\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"Sin gastos\"\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Categoría\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la categoría</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCategoria(gastos, selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgastos;\r\n","import {\r\n  IonContent,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFabList,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport MClistgastos from \"../MClistgastos/mclistgastos\";\r\nimport MClistgastosgeneral from \"../MClistgastosgeneral/mclistgastosgeneral\";\r\nimport \"./mcinfogrupo.css\";\r\n\r\nconst MCinfogrupo = ({ grupo }) => {\r\n  console.log(\"MCinfogrupo\", grupo);\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header-info-grupo\"\r\n        style={{ backgroundColor: grupo.color }}\r\n      >\r\n        <span\r\n          style={\r\n            grupo.name\r\n              ? grupo.name.length < 10\r\n                ? { fontSize: \"30px\" }\r\n                : { fontSize: \"20px\" }\r\n              : null\r\n          }\r\n        >\r\n          {grupo.name}\r\n        </span>\r\n        {grupo.isAdmin ? (\r\n          <IonFab className=\"grupo-info-fab\">\r\n            <IonFabButton color=\"success\" className=\"grupo-info-fab-first\">\r\n              <DynamicFaIcon name={\"arrowBackOutline\"} color=\"white\" />\r\n            </IonFabButton>\r\n            <IonFabList side=\"start\" className=\"grupo-info-list\">\r\n              <IonFabButton color=\"warning\" className=\"grupo-info-fab-button\">\r\n                <DynamicFaIcon name={\"pencilOutline\"} color=\"black\" />\r\n              </IonFabButton>\r\n              <IonRouterLink\r\n                routerLink={\"/categories/\" + grupo.docid}\r\n                routerDirection=\"forward\"\r\n              >\r\n                <IonFabButton\r\n                  color=\"secondary\"\r\n                  className=\"grupo-info-fab-button\"\r\n                >\r\n                  <DynamicFaIcon name={\"appsOutline\"} color=\"black\" />\r\n                </IonFabButton>\r\n              </IonRouterLink>\r\n            </IonFabList>\r\n          </IonFab>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      {/* <MClistgrupos /> */}\r\n      {grupo.gastos ? (\r\n        <MClistgastos gastos={grupo.gastos} groupuid={grupo.docid} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCinfogrupo;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCinfogrupo from \"components/Grupos/MCinfogrupo/mcinfogrupo\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./InfoGrupo.css\";\r\n\r\nconst InfoGrupoPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, grupoSelected } = useGrupos();\r\n\r\n  useEffect(() => {\r\n    getGroup(groupUID, true);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"true\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            <MCinfogrupo grupo={grupoSelected} />\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default InfoGrupoPage;\r\n"],"names":["gastos","groupuid","useGrupos","loadinggastos","grupos","setError","loadinggrupos","error","success","setSuccess","deleteCategoria","useState","isConfirmOpen","setIsConfirmOpen","selected","gastosview","setGastosview","viewAll","prop","length","color","loading","css","size","className","routerLink","routerDirection","sort","a","b","fecha","slice","map","g","index","style","borderColor","categoria","profileData","name","backgroundImage","image","CONSTANTS","desc","fechaConvert","cantidad","fontSize","icono","slot","onClick","isOpen","status","onDidDismiss","msg","message","icon","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","grupo","console","log","exitGroup","checkAdmin","deleteGroup","backgroundColor","isAdmin","side","docid","groupUID","useParams","getGroup","grupoSelected","useEffect","fullscreen","scrollX","scrollY"],"sourceRoot":""}
{"version":3,"file":"static/js/497.0201ed11.chunk.js","mappings":"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","sources":["components/Grupos/MClistgastos/mclistgastos.jsx","components/Grupos/MCinfogrupo/mcinfogrupo.jsx","pages/Grupos/InfoGrupo/InfoGrupo.jsx"],"sourcesContent":["import {\r\n  IonAlert,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonToast,\r\n  IonContent,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mclistgastos.css\";\r\nimport { CONSTANTS } from \"global/functions\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst MClistgastos = ({ gastos }) => {\r\n  const {\r\n    grupos,\r\n    loadinggastos,\r\n    loadinggrupos,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n    deleteCategoria,\r\n  } = useGrupos();\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  return (\r\n    <>\r\n      {loadinggastos ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          {gastos ? (\r\n            <div className=\"listgastos-component\">\r\n              <span className=\"listgastos-component-title\">\r\n                Últimos movimientos\r\n              </span>\r\n              <IonList className=\"lista-categorias\">\r\n                {gastos.map((g, index) => (\r\n                  <div className=\"gasto-item\" key={index}>\r\n                    <div className=\"gasto-name-info\">\r\n                      <div className=\"image\">\r\n                        <div\r\n                          className=\"image-circle\"\r\n                          style={{\r\n                            backgroundImage:\r\n                              'url(\"' +\r\n                              (g.profileData\r\n                                ? g.profileData.image\r\n                                : CONSTANTS.defaultAvatar) +\r\n                              '\")',\r\n                          }}\r\n                        ></div>\r\n                        <div className=\"\">{g.profileData.name}</div>\r\n                      </div>\r\n                    </div>\r\n                    wdad\r\n                    <div className=\"gasto-options\" slot=\"end\"></div>\r\n                  </div>\r\n                ))}\r\n              </IonList>\r\n            </div>\r\n          ) : (\r\n            \"Sin gastos\"\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n      <IonToast\r\n        isOpen={error.status}\r\n        onDidDismiss={() => setError({ status: false, msg: \"\" })}\r\n        message={error.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"warning\"\r\n      />\r\n      <IonAlert\r\n        isOpen={isConfirmOpen}\r\n        onDidDismiss={() => setIsConfirmOpen(false)}\r\n        // cssClass='my-custom-class'\r\n        header={\"Eliminar Categoría\"}\r\n        message={\r\n          \"¿Seguro que quieres elimiar la categoría</br><strong>\" +\r\n          selected.name +\r\n          \"</strong>?\"\r\n        }\r\n        buttons={[\r\n          {\r\n            text: \"Cancelar\",\r\n            role: \"cancel\",\r\n            cssClass: \"secondary\",\r\n            id: \"cancel-button\",\r\n          },\r\n          {\r\n            text: \"Elimiar\",\r\n            id: \"confirm-button\",\r\n            handler: () => {\r\n              deleteCategoria(gastos, selected);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MClistgastos;\r\n","import {\r\n  IonContent,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFabList,\r\n  IonRouterLink,\r\n} from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport MClistgastos from \"../MClistgastos/mclistgastos\";\r\nimport \"./mcinfogrupo.css\";\r\n\r\nconst MCinfogrupo = ({ grupo }) => {\r\n  const {\r\n    grupos,\r\n    loadinggrupos,\r\n    exitGroup,\r\n    checkAdmin,\r\n    deleteGroup,\r\n    setError,\r\n    error,\r\n    success,\r\n    setSuccess,\r\n  } = useGrupos();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header-info-grupo\"\r\n        style={{ backgroundColor: grupo.color }}\r\n      >\r\n        <span\r\n          style={\r\n            grupo.name\r\n              ? grupo.name.length < 10\r\n                ? { fontSize: \"30px\" }\r\n                : { fontSize: \"20px\" }\r\n              : null\r\n          }\r\n        >\r\n          {grupo.name}\r\n        </span>\r\n        {grupo.isAdmin ? (\r\n          <IonFab className=\"grupo-info-fab\">\r\n            <IonFabButton color=\"success\" className=\"grupo-info-fab-first\">\r\n              <DynamicFaIcon name={\"arrowBackOutline\"} color=\"white\" />\r\n            </IonFabButton>\r\n            <IonFabList side=\"start\" className=\"grupo-info-list\">\r\n              <IonFabButton color=\"warning\" className=\"grupo-info-fab-button\">\r\n                <DynamicFaIcon name={\"pencilOutline\"} color=\"black\" />\r\n              </IonFabButton>\r\n              <IonRouterLink\r\n                routerLink={\"/categories/\" + grupo.docid}\r\n                routerDirection=\"forward\"\r\n              >\r\n                <IonFabButton\r\n                  color=\"secondary\"\r\n                  className=\"grupo-info-fab-button\"\r\n                >\r\n                  <DynamicFaIcon name={\"appsOutline\"} color=\"black\" />\r\n                </IonFabButton>\r\n              </IonRouterLink>\r\n            </IonFabList>\r\n          </IonFab>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <IonContent className=\"content-info-grupo\">\r\n        {/* <MClistgrupos /> */}\r\n        {grupo.gastos ? <MClistgastos gastos={grupo.gastos} /> : <></>}\r\n      </IonContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCinfogrupo;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCinfogrupo from \"components/Grupos/MCinfogrupo/mcinfogrupo\";\r\nimport useGrupos from \"hooks/useGrupos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./InfoGrupo.css\";\r\n\r\nconst InfoGrupoPage = () => {\r\n  let { groupUID } = useParams();\r\n  const { loadinggrupos, getGroup, grupoSelected } = useGrupos();\r\n\r\n  useEffect(() => {\r\n    getGroup(groupUID, true);\r\n  }, [groupUID]);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        {loadinggrupos ? (\r\n          <ClipLoader\r\n            color={\"blue\"}\r\n            loading={true}\r\n            css={\"display: block;margin: 0 auto\"}\r\n            size={150}\r\n          />\r\n        ) : (\r\n          <>\r\n            <MCinfogrupo grupo={grupoSelected} />\r\n          </>\r\n        )}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default InfoGrupoPage;\r\n"],"names":["gastos","useGrupos","loadinggastos","grupos","setError","loadinggrupos","error","success","setSuccess","deleteCategoria","useState","isConfirmOpen","setIsConfirmOpen","selected","color","loading","css","size","className","map","g","index","style","backgroundImage","profileData","image","CONSTANTS","name","slot","isOpen","status","onDidDismiss","msg","message","icon","informationCircle","position","duration","header","buttons","text","role","cssClass","id","handler","grupo","exitGroup","checkAdmin","deleteGroup","backgroundColor","length","fontSize","isAdmin","side","routerLink","docid","routerDirection","groupUID","useParams","getGroup","grupoSelected","useEffect","fullscreen","scrollX","scrollY"],"sourceRoot":""}
{"version":3,"file":"static/js/903.3592fad1.chunk.js","mappings":"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","sources":["components/Generales/MCcolores/mccolores.jsx","components/Generales/MCiconos/mciconos.jsx","components/Cuentas/MCdatoscuenta/mcdatoscuenta.jsx","pages/Cuentas/DatosCuenta/DatosCuenta.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"./mccolores.css\";\r\n\r\nconst MCcolores = (props) => {\r\n  const colores = [\r\n    \"#F44336\",\r\n    \"#9B59B6\",\r\n    \"#5499C7\",\r\n    \"#76D7C4\",\r\n    \"#7DCEA0\",\r\n    \"#F7DC6F\",\r\n    \"#E59866\",\r\n    \"#36f443\",\r\n    \"#4336f4\",\r\n    \"#f436a8\",\r\n    \"#9e36f4\",\r\n    \"#36f488\",\r\n    \"#f47f36\",\r\n  ];\r\n  return (\r\n    <div className=\"color-component\">\r\n      <span className=\"info\">\r\n        Selecciona un color <span className=\"required\">*</span>\r\n      </span>\r\n      <hr\r\n        className=\"separador-color\"\r\n        style={{\r\n          backgroundColor: props.colorSelected,\r\n        }}\r\n      />\r\n\r\n      <div className=\"color-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {colores\r\n            ? colores.map((c, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.colorSelected == c ? \"color selected\" : \"color\"\r\n                  }\r\n                  style={\r\n                    props.colorSelected == c\r\n                      ? {\r\n                          borderColor: c,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(c);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"circle\"\r\n                    style={{\r\n                      backgroundColor: c,\r\n                    }}\r\n                  ></div>\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay colores disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCcolores;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./mciconos.css\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport {\r\n  iconosCuentas,\r\n  iconosGrupos,\r\n  iconosCategorias,\r\n} from \"global/functions\";\r\n\r\nconst MCiconos = (props) => {\r\n  const [iconos, setIconos] = useState(iconosCuentas);\r\n\r\n  useEffect(() => {\r\n    switch (props.type) {\r\n      case \"group\":\r\n        setIconos(iconosGrupos);\r\n        break;\r\n      case \"cuentas\":\r\n        setIconos(iconosCuentas);\r\n        break;\r\n      case \"categories\":\r\n        setIconos(iconosCategorias);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <div className=\"icono-component\">\r\n      <span className=\"info\">\r\n        Selecciona un icono <span className=\"required\">*</span>\r\n      </span>\r\n      <div className=\"icono-list\">\r\n        <Swiper slidesPerView={5} loop={true} className=\"mySwiper\">\r\n          {iconos\r\n            ? iconos.map((i, index) => (\r\n                <SwiperSlide\r\n                  className={\r\n                    props.iconoSelected == i ? \"icono selected\" : \"icono\"\r\n                  }\r\n                  style={\r\n                    props.iconoSelected == i\r\n                      ? {\r\n                          borderColor: props.colorSelected,\r\n                          borderWidth: \"3px\",\r\n                          borderStyle: \"solid\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                  onClick={() => {\r\n                    props.onChange(i);\r\n                  }}\r\n                >\r\n                  <DynamicFaIcon name={i} color={props.colorSelected} />\r\n                </SwiperSlide>\r\n              ))\r\n            : \"No hay iconos disponibles\"}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCiconos;\r\n","import { IonButton, IonInput, IonItem, IonLabel, IonToast } from \"@ionic/react\";\r\nimport DynamicFaIcon from \"components/Generales/DynamicIcons/DynamicIcons\";\r\nimport MCcolores from \"components/Generales/MCcolores/mccolores\";\r\nimport MCiconos from \"components/Generales/MCiconos/mciconos\";\r\nimport useCuentas from \"hooks/useCuentas\";\r\nimport useUser from \"hooks/useUser\";\r\nimport { informationCircle } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./mcdatoscuenta.css\";\r\n\r\nconst MCdatoscuenta = (props) => {\r\n  const { profile, updateProfile, loadingprofile } = useUser();\r\n  const { cuentas, createNewCuenta, success, setSuccess } = useCuentas();\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [color, setColor] = useState(\"#5499C7\");\r\n  const [icono, setIcono] = useState(\"cashOutline\");\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const [toast, setToast] = useState({\r\n    isOpen: false,\r\n    content: \"Ha ocurrido un error!\",\r\n    color: \"danger\",\r\n  });\r\n\r\n  function changeColor(newValue) {\r\n    setColor(newValue);\r\n  }\r\n\r\n  function changeIcono(newValue) {\r\n    setIcono(newValue);\r\n  }\r\n\r\n  function saveCuenta() {\r\n    if (!name) {\r\n      setError(true);\r\n      setToast({\r\n        isOpen: true,\r\n        content: \"Revise los campos marcados en rojo.\",\r\n        color: \"danger\",\r\n      });\r\n      return;\r\n    } else {\r\n      setError(true);\r\n    }\r\n\r\n    const NewCuenta = {\r\n      uid: profile.uid,\r\n      icono: icono ? icono : \"cashOutline\",\r\n      color: color ? color : \"#5499C7\",\r\n      cantidad: cantidad ? cantidad.toString().replace(/,/g, \".\") : 0,\r\n      name: name,\r\n    };\r\n    console.log(\"NewCuenta\", NewCuenta);\r\n    createNewCuenta(NewCuenta);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingprofile ? (\r\n        <ClipLoader\r\n          color={\"blue\"}\r\n          loading={true}\r\n          css={\"display: block;margin: 0 auto\"}\r\n          size={150}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"mc-input value\">\r\n            <span>Valor inicial (EUR)</span>\r\n            <div className=\"input-currency\">\r\n              <button\r\n                id=\"decrement\"\r\n                className=\"button-decrement\"\r\n                onClick={(e) => {\r\n                  if (!(cantidad < 1)) {\r\n                    setCantidad(cantidad - 1);\r\n                  }\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"removeCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n              <CurrencyInput\r\n                className=\"valueInput\"\r\n                id=\"input-example\"\r\n                name=\"input-name\"\r\n                placeholder=\"Valor inicial de la cuenta\"\r\n                defaultValue={0}\r\n                value={cantidad}\r\n                decimalsLimit={2}\r\n                onValueChange={(value) => {\r\n                  setCantidad(value);\r\n                }}\r\n                suffix=\" €\"\r\n              />\r\n              <button\r\n                id=\"increment\"\r\n                className=\"button-increment\"\r\n                onClick={(e) => {\r\n                  setCantidad(cantidad + 1);\r\n                }}\r\n              >\r\n                <DynamicFaIcon\r\n                  name={\"addCircleOutline\"}\r\n                  slot=\"end\"\r\n                  color=\"white\"\r\n                />\r\n              </button>\r\n            </div>\r\n\r\n            {/* <IonLabel position=\"floating\">Valor inicial (EUR)</IonLabel>\r\n            <IonInput\r\n              disabled={success.status}\r\n              value={cantidad}\r\n              type=\"number\"\r\n              maxlength=\"8\"\r\n              placeholder=\"Valor inicial de la cuenta en euros\"\r\n              onIonChange={(e) => setCantidad(e.detail.value)}\r\n            ></IonInput> */}\r\n          </div>\r\n          <IonItem className=\"mc-input\">\r\n            <IonLabel\r\n              position=\"floating\"\r\n              style={error && !name ? { color: \"red\" } : { color: \"black\" }}\r\n            >\r\n              Nombre de la cuenta <span className=\"required\">*</span>\r\n            </IonLabel>\r\n            <IonInput\r\n              maxlength=\"20\"\r\n              disabled={success.status}\r\n              value={name}\r\n              placeholder=\"Nombre de la cuenta\"\r\n              onIonChange={(e) => setName(e.detail.value)}\r\n            ></IonInput>\r\n          </IonItem>\r\n          <MCcolores onChange={changeColor} colorSelected={color} />\r\n          <MCiconos\r\n            onChange={changeIcono}\r\n            colorSelected={color}\r\n            iconoSelected={icono}\r\n          />\r\n          <IonButton\r\n            expand=\"full\"\r\n            className=\"boton-guardar\"\r\n            onClick={saveCuenta}\r\n            disabled={success.status}\r\n          >\r\n            Guardar\r\n            <DynamicFaIcon\r\n              name={\"arrowUpCircleOutline\"}\r\n              slot=\"end\"\r\n              color=\"white\"\r\n            />\r\n          </IonButton>\r\n        </>\r\n      )}\r\n      <IonToast\r\n        isOpen={toast.isOpen}\r\n        onDidDismiss={() => setToast(false)}\r\n        message={toast.content}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color={toast.color}\r\n      />\r\n\r\n      <IonToast\r\n        isOpen={success.status}\r\n        onDidDismiss={() => setSuccess({ status: false, msg: \"\" })}\r\n        message={success.msg}\r\n        icon={informationCircle}\r\n        position=\"top\"\r\n        duration={2000}\r\n        color=\"success\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MCdatoscuenta;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport MCdatoscuenta from \"components/Cuentas/MCdatoscuenta/mcdatoscuenta\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./DatosCuenta.css\";\r\n\r\nconst DatosCuentaPage = () => {\r\n  const location = useLocation();\r\n  var str = location.pathname.split(\"/\");\r\n  var type = str[str.length - 1];\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen scrollX=\"false\" scrollY=\"false\">\r\n        <IonContent scrollX=\"true\" scrollY=\"true\">\r\n          <MCdatoscuenta type={type} />\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default DatosCuentaPage;\r\n"],"names":["props","colores","className","style","backgroundColor","colorSelected","slidesPerView","loop","map","c","index","borderColor","borderWidth","borderStyle","onClick","onChange","useState","iconosCuentas","iconos","setIconos","useEffect","type","iconosGrupos","iconosCategorias","i","iconoSelected","name","color","useUser","profile","loadingprofile","updateProfile","useCuentas","createNewCuenta","cuentas","success","setSuccess","setName","error","setError","setColor","icono","setIcono","cantidad","setCantidad","isOpen","content","toast","setToast","loading","css","size","id","e","slot","placeholder","defaultValue","value","decimalsLimit","onValueChange","suffix","position","maxlength","disabled","status","onIonChange","detail","newValue","expand","NewCuenta","uid","toString","replace","console","log","onDidDismiss","message","icon","informationCircle","duration","msg","str","useLocation","pathname","split","length","fullscreen","scrollX","scrollY"],"sourceRoot":""}